<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemyice</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_brick_throw_th</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A frozen enemy

//Blink
alarm[0] = 1080;

//Destroy
alarm[1] = 1200;

//Sparkle
alarm[2] = 1;

//Whether the block was kicked
ready = 0;

//Combo
hitcombo = 0;

//Inherit create event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Leave a trail

alarm[2] = 4;
with (instance_create(bbox_left+random(sprite_width),bbox_top+random(sprite_height),obj_smoke)) {

    sprite_index = spr_sparkle_small_blue;
    image_speed = 0.1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy

//Play 'Bump' sound
audio_stop_play_sound(snd_bump, 0, false);

//Create smoke effect
with (instance_create(bbox_left+bbox_right/2-8, bbox_top+bbox_bottom/2-8, obj_smoke)) {

    sprite_index = spr_smoke_16;
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blink

image_alpha = !image_alpha
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hurt the player when necessary

//If the block can hurt the player
if (harmplayer == 1)
    with (other) event_user(0);
    
//Otherwise
else {

    //If not moving up
    if (vspeed &gt; -0.5) {
    
        //If the item can be held and the player can hold it
        if (can_hold())
        &amp;&amp; (ready == 0)
        &amp;&amp; (other.bbox_bottom &gt; bbox_top) {
        
            //Make the player hold it
            other.holding = 1;
            
            //Hold
            held = 1;
            
            //Stop movement
            speed = 0;
            gravity = 0;
        }
        
        //Otherwise
        else if ((held == 0) &amp;&amp; (ready == 0)) {
        
            //Play 'Kick' sound
            audio_stop_play_sound(snd_kick, 0, false);
            
            //Create thump
            instance_create(x, y+8, obj_spinthump);
            
            //Kick it
            ready = 1;
            
            //Reset alarms
            alarm[0] = -1;
            alarm[1] = -1;
            image_alpha = 1;
            
            //If the player is at the left of the block
            if (other.x &lt; x)
                hspeed = (2.7+(abs(obj_playerparent.hspeed)/4));
                
            //Otherwise, if the player is at the right of the block
            else if (other.x &gt; x)
                hspeed = -(2.7+(abs(obj_playerparent.hspeed)/4));                             
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select a appropiate ice sprite

//Prevent frozen enemies from spawning inside solids
if (!collision_rectangle(bbox_right, bbox_top, bbox_right, bbox_bottom, obj_solid, 1, 0)) {

    while (collision_rectangle(bbox_left, bbox_top, bbox_left, bbox_bottom, obj_solid, 1, 0))
        x++;
}
else if (!collision_rectangle(bbox_left, bbox_top, bbox_left, bbox_bottom, obj_solid, 1, 0)) {

    while (collision_rectangle(bbox_right, bbox_top, bbox_right, bbox_bottom, obj_solid, 1, 0))
        x--;
}
else if (!collision_rectangle(bbox_left, bbox_bottom, bbox_right, bbox_bottom, obj_solid, 1, 0)) {

    while (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solid, 1, 0))
        y++;
}
else if (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_solid, 1, 0)) {

    while (collision_rectangle(bbox_left, bbox_bottom, bbox_right, bbox_bottom, obj_solid, 1, 0))
        y--;
}

//If the sprite if greater than 16x16, set a 32x32 block
if (bbox_bottom-bbox_top &gt; 18)
&amp;&amp; (bbox_right-bbox_left &gt; 18)
    sprite_index = spr_enemyice_32x32;
    
//Otherwise,  if the sprite height is greater than 16 pixels, set a 16x32 block
else if (bbox_bottom-bbox_top &gt; 18)
    sprite_index = spr_enemyice_16x32;
    
//Otherwise,  if the sprite width is greater than 16 pixels, set a 32x16 block
else if (bbox_right-bbox_left &gt; 18)
    sprite_index = spr_enemyice_32x16;
    
//Otherwise
else
    sprite_index = spr_enemyice;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shatter
    
//Play 'Icicle Break' sound
audio_stop_play_sound(snd_icicle_break, 0, false);

//Create shards    
shard_create(x+sprite_width/2, y+sprite_width/2, spr_shard_ice, 3, 6, 45);
shard_create(x+sprite_width/2, y+sprite_width/2, spr_shard_ice, 1, 6, 60);
shard_create(x+sprite_width/2, y+sprite_width/2, spr_shard_ice, 0, 6, 120);
shard_create(x+sprite_width/2, y+sprite_width/2, spr_shard_ice, 2, 6, 135);

//Create sparks
repeat(32) {

    with (instance_create(bbox_left+sprite_width/2-4, bbox_top+sprite_height/2-4, obj_smoke)) {
    
        //Sprite
        sprite_index = spr_sparkle_small_blue;
        
        //Animate
        image_speed = 0.1;
        
        //Motion
        motion_set(random(360), random(1));
    }
}
    
//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw NPC

draw_sprite_ext(sprite_index, -1, x, y+1, 1, 1, 0, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
