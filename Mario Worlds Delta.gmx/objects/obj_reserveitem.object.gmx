<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reserve item

//Play 'Reserve Drop' sound
audio_stop_play_sound(snd_reservedrop, 0, false)

//Animate
image_speed = 0;

//Move down
vspeed = 1;

//Make it invisible
alarm[0] = 1;

//Sprite check
alarm[2] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite Check

//If this is a mushroom
if (sprite_index == spr_mushroom)
    image_index = 1;

//Otherwise, if this is a fire flower
else if (sprite_index == spr_fireflower)
    image_speed = 0.15;

//Otherwise, if this is a feather
else if (sprite_index == spr_feather) {
    
    //Turn into a real feather
    with (instance_create(x, y, obj_feather_sprout)) {
    
        nopoints = true;
        alarm[1] = 1;
    }
    
    //Destroy
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make it invisible

visible = true;
alarm[0] = 12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make it invisible

visible = false;
alarm[1] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reserve item logic

if (bbox_top &gt; room_height)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get the powerup

//If this is a mushroom
if (sprite_index == spr_mushroom) {
    
    //Get the powerup if small
    if (global.powerup == cs_pow_small) {
    
        //Play 'Powerup' sound
        audio_stop_play_sound(snd_powerup, 0, false);
    
        //Get it
        _transform = instance_create(0, 0, obj_player_transform);
            _transform.oldpowerup = global.powerup;
            _transform.newpowerup = cs_pow_super;
    }
    
    //Otherwise, reserve the item
    else {
    
        //Play 'Powerup' sound
        audio_stop_play_sound(snd_reserve, 0, false);
    
        //Put the 'Mushroom' in reserve
        if (global.reserveitem == cs_pow_small)
            global.reserveitem = cs_pow_super;
    }
    
    //Destroy
    instance_destroy();
}

//Otherwise, if this is a fire flower
else if (sprite_index == spr_fireflower) {
    
    //If the player is big and there's NOT an item on reserve.
    if (global.powerup == cs_pow_super)
    &amp;&amp; (global.reserveitem == cs_pow_small)
        global.reserveitem = cs_pow_super;
        
    //Otherwise, if the player does have a powerup
    else if (global.powerup &gt; cs_pow_super)
        global.reserveitem = global.powerup;
    
    //If the player does not have the correct powerup
    if (global.powerup != cs_pow_fire) {
        
        //Play 'Powerup' sound
        audio_stop_play_sound(snd_powerup, 0, false);    
        
        //Perform animation sequence
        _transform = instance_create(0, 0, obj_player_transform)
        with (_transform) {
        
            oldpowerup = global.powerup;
            newpowerup = 2;
        }
        
        //Set powerup
        global.powerup = cs_pow_fire;     
    }
    else {
    
        //Play sounds
        audio_stop_play_sound(snd_powerup, 0, false);
        audio_stop_play_sound(snd_reserve, 0, false);
    }
    
    //Destroy
    instance_destroy();    
}

//Otherwise, if this is a ice flower
else if (sprite_index == spr_iceflower) {
    
    //If the player is big and there's NOT an item on reserve.
    if (global.powerup == cs_pow_super)
    &amp;&amp; (global.reserveitem == cs_pow_small)
        global.reserveitem = cs_pow_super;
        
    //Otherwise, if the player does have a powerup
    else if (global.powerup &gt; cs_pow_super)
        global.reserveitem = global.powerup;
    
    //If the player does not have the correct powerup
    if (global.powerup != cs_pow_ice) {
        
        //Play 'Powerup' sound
        audio_stop_play_sound(snd_powerup, 0, false);    
        
        //Perform animation sequence
        _transform = instance_create(0, 0, obj_player_transform)
        with (_transform) {
        
            oldpowerup = global.powerup;
            newpowerup = 4;
        }
        
        //Set powerup
        global.powerup = cs_pow_ice;     
    }
    else {
    
        //Play sounds
        audio_stop_play_sound(snd_powerup, 0, false);
        audio_stop_play_sound(snd_reserve, 0, false);
    }
    
    //Destroy
    instance_destroy();    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
