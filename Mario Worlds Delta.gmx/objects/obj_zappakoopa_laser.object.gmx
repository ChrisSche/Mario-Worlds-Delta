<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_zappakoopa_lightning_end</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Zappakoopa laser

//Animate
image_speed = 0.3;

//Beam state
beam = 0;

//Beam length
length = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy and make parent object move

//Make the parent move again
with (parent) {

    alarm[5] = 30;
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Laser logic

//If the beam is not ready
if (beam == 0) {
  
    //If the parent is facing right  
    if (parent.xscale &gt; 0) {
        
        //If there's a solid on the way
        if (((collision_point(x, y, obj_solidparent, 0, 0)) || (collision_point(x, y, obj_slopeparent, 1, 0))) 
        || (x &gt; view_xview[view_current]+view_wview[view_current]+16)) {
        
            move_snap(4, 1);
            beam = 1;
            alarm[0] = 60;
        }
        else {
        
            x += 4;
            length += 4;
        }
    }
    
    //Otherwise, if the parent is facing left
    else if (parent.xscale &lt; 0) {
        
        //If there's a solid on the way
        if (((collision_point(x, y, obj_solidparent, 0, 0)) || (collision_point(x, y, obj_slopeparent, 1, 0))) 
        || (x &lt; view_xview[view_current]-16)) {
        
            move_snap(4, 1);
            beam = 1;
            alarm[0] = 60;
        }
        else {
        
            x -= 4;
            length -= 4;
        }
    }
}

//Check for the player and hurt him
player = collision_rectangle(xstart, y-4, xstart+length, y+4, obj_playerparent, 0, 0)
if (player)
    with (player) event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the laser

//If the parent is facing right
if (parent.xscale == 1) {

    //Draw lightning
    draw_sprite_tiled_area_ext(spr_zappakoopa_lightning, -1, xstart, ystart-8, xstart, ystart-8, xstart+length, ystart+8, c_white, 1);

    //Draw lightning end points
    draw_sprite_ext(spr_zappakoopa_lightning_end, -1, xstart, parent.y+8, 1, 1, 0, c_white, 1);
    draw_sprite_ext(spr_zappakoopa_lightning_end, -1, x, parent.y+8, 1, 1, 0, c_white, 1);
}
    
//Otherwise, if the parent is facing left
else if (parent.xscale == -1) {

    //Draw lightning 
    draw_sprite_tiled_area_ext(spr_zappakoopa_lightning, -1, xstart, ystart-8, x, ystart-8, xstart, ystart+8, c_white, 1);

    //Draw lightning end points
    draw_sprite_ext(spr_zappakoopa_lightning_end, -1, xstart, parent.y+8, 1, 1, 0, c_white, 1);
    draw_sprite_ext(spr_zappakoopa_lightning_end, -1, x, parent.y+8, 1, 1, 0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
