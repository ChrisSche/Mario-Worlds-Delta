<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bouncinchuck</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_charginchuck</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bouncin' Chuck

//Inherit event from chuck
event_inherited();

//Deny alarm 10
alarm[10] = -1;

//Offset
offset = 0;

//Whether this object is jumping
jumping = 0;

//Animate
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump towards the player

//Play 'Trampoline' sound
audio_stop_play_sound(snd_trampoline, 0, false);

//Set vertical speed
vspeed = -6;

//Boost jump
y--;

//Reset offset
offset = 0;

//Set jump state
jumping = 2;

//Set jumping frame
image_index = 2;

//If the player does not exist or it's at the left
if (!instance_exists(obj_playerparent))
|| (obj_playerparent.x &lt; x)
    hspeed = -2.1;
else
    hspeed = 2.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage offset

alarm[1] = 1;
if (jumping == 1)
    offset = !offset;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Allow jump or jump when the player is not nearby

//If the chuck hp is full
if (hp == 3) {

    //If the chuck is not jumping
    if (jumping == 0) {
    
        //If there's no gravity
        if (gravity == 0) {
        
            //Set vertical speed
            vspeed = -2;
            
            //Boost jump
            y--;
        }
        
        //Repeat the process
        alarm[0] = 90;
    }
    else if (jumping == 3) {
    
        jumping = 0;
        alarm[0] = 15;
    }
}
else
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bouncin' Chuck logic

//Push value
xx = abs(hspeed);

//If the chuck has not been hurt before
if (hp == 3) {
    
    //Floor collision
    event_user(4);
    
    //Face towards the player
    event_user(8);
    
    //If there's no gravity
    if (gravity == 0) {
    
        //If the chuck is jumping
        if (jumping == 0) {
        
            //If the player does exist
            if (instance_exists(obj_playerparent)) 
            &amp;&amp; (obj_playerparent.x &gt; bbox_left-64)
            &amp;&amp; (obj_playerparent.x &lt; bbox_right+64) {
            
                //Set charge frame
                image_index = 1;
    
                //Begin jump
                jumping = 1;
                
                //Begin shake
                alarm[1] = 1;
                
                //Perform jump in player's direction
                alarm[2] = 60;
            }
        }
        
        //Otherwise, if the chuck is jumping
        else if (jumping == 2) {
        
            //Set jumping state
            jumping = 3;
        
            //Stop horizontal speed
            hspeed = 0;
            
            //Allow jumping
            alarm[0] = 30;
        
            //Set up default sprite
            if (image_index != 0)
                image_index = 0;
        }
    }
    
    //Move away from walls
    if ((hspeed &lt; 0) &amp;&amp; (collision_rectangle(bbox_left+hspeed, bbox_top+4, bbox_left+hspeed, bbox_bottom-1, obj_solid, 0, 0)))
        x += xx;
    if ((hspeed &gt; 0) &amp;&amp; (collision_rectangle(bbox_right+hspeed, bbox_top+4, bbox_right+hspeed, bbox_bottom-1, obj_solid, 0, 0)))
        x -= xx;
}
else
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom stomp script

//Inherit stomp event from parent
event_inherited();

//Stop all alarms
alarm[2] = -1;
alarm[3] = -1;
alarm[4] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Bouncin' Chuck

draw_sprite_ext(sprite_index, image_index, round(x)+offset, round(y)+1, xscale, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
