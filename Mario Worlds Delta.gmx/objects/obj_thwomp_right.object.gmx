<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_thwomp_side</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rightward Thwomp

//Inherit event from parent
event_inherited();

//How vulnerable is this enemy to items
vulnerable = 3;

//How vulnerable is this enemy to the player
stomp = 2;

//How vulnerable is this enemy to Yoshi
edible = 2;

//Death Sprite
deathsprite = sprite_index;

//Animate
image_speed = 0;

//Gravity direction
gravity_direction = 0;

//Whether the thwomp is falling
ready = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return to start position

//Set the horizontal speed
hspeed = -1;

//Set the state
ready = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Look towards the player

//If not moving, check player position
if (ready == 0) {

    //If the player does not exist
    if (!instance_exists(obj_playerparent))
    || (obj_playerparent.x &lt; bbox_right)
        image_index = 0;
        
    //Otherwise
    else {
    
        //If the player is pixels nearby, set peekin' pose
        if (obj_playerparent.x &lt; bbox_right+192)
        &amp;&amp; (obj_playerparent.x &gt; bbox_right+128)
            image_index = 1;
        else
            image_index = 0;
    }
}

//Otherwise, if moving
else {

    //If moving up
    if (ready == 3)
        image_index = 0;
        
    //Otherwise, if falling down
    else
        image_index = 2;
}

//Always look to the right
xscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Thwomp logic

//Go to the left if the player gets close
if (ready == 0)
&amp;&amp; (instance_exists(obj_playerparent))
&amp;&amp; (collision_rectangle(bbox_right, bbox_top, bbox_right+128, bbox_bottom, obj_playerparent, 0, 0)) {

    //Set the gravity
    gravity = 0.15;
    
    //Go to the left
    ready = 1;
}

//Otherwise if moving to the left, check for a solid
else if (ready == 1) {
    
    //Check for a solid
    mysolid = collision_rectangle(bbox_right, bbox_top+4, bbox_right+hspeed, bbox_bottom-1, obj_solid, 0, 0);
    
    //If there's a solid
    if (mysolid) {
    
        //Play 'Explosion' sound
        audio_stop_play_sound(snd_explosion, 0, false);
        
        //Shake screen
        init_shake(25);
        
        //Change state
        ready = 2;
    
        //Stop horizontal speed
        hspeed = 0;
        
        //Stop gravity
        gravity = 0;
        
        //Create smoke effects
        with (instance_create(bbox_right, bbox_top, obj_smoke)) sprite_index = spr_smoke_16;
        with (instance_create(bbox_right, bbox_bottom, obj_smoke)) sprite_index = spr_smoke_16;
        
        //Snap to the right of the solid
        x = mysolid.bbox_left-12;
        
        //Move to start
        alarm[0] = 60;
    }
}

//Otherwise if ascending and nearby the start point, stop.
else if (ready == 3) &amp;&amp; (x &lt; xstart+1) {

    //Change state
    ready = 0;
    
    //Stop vertical movement
    hspeed = 0;
    x = xstart;
}

//Cap horizontal speed
if (hspeed &gt; 4)
    hspeed = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Thwomp

draw_sprite_ext(sprite_index, -1, round(x), round(y), xscale, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
