<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_confusedchuck</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_charginchuck</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Confused Chuck

//Inherit event from chuck
event_inherited();

//Deny alarm 10
alarm[10] = -1;

//Do not animate
image_speed = 0;
image_index = 0;

//Number of balls to throw
balls = 5;

//Whether the chuck is jumping
jumping = 0;

//Whether the chuck is throwing
throwing = 0;

//Throw balls
alarm[0] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set throwing pose

//Set throwing state
throwing = 1;

//If the chuck hp is maxed out
if (hp == 3) {
    
    //If the player exists
    if (instance_exists(obj_playerparent)) {
    
        //If the player is above
        if (obj_playerparent.y &lt; y) {
        
            //Set the jumping sprite
            sprite_index = spr_confusedchuck_jump;
            
            //Animate
            image_speed = 0.15;
            image_index = 1;
            
            //Boost jump
            y--;
            
            //Set jump state
            jumping = 1;
            
            //Set vertical speed
            if (swimming == 1)
                vspeed = -1.85;
            else
                vspeed = -3.7;
        }     
        
        //Otherwise, animate normally
        else {
        
            //Set default sprite
            sprite_index = spr_confusedchuck;
            
            //Animate
            image_speed = 0.15;
        }           
    }
}
else
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Confused Chuck logic

//If the chuck health is maxed out
if (hp == 3) {

    //If jumping
    if (jumping &gt; 0) {
    
        //If moving up
        if ((jumping == 1) &amp;&amp; (vspeed &gt; 0)) {
        
            //Throw a ball on the same direction
            with (instance_create(x+8*sign(xscale), y, obj_baseball)) hspeed = 1.5*sign(other.xscale);
            
            //Set the default pose
            image_speed = 0;
            image_index = 0;
            
            //End throwing
            jumping = 2;
        }
        
        //If on ground
        else if ((jumping == 2) &amp;&amp; (gravity == 0)) {
        
            //Set the default sprite
            sprite_index = spr_confusedchuck;
        
            //Set the default pose
            image_speed = 0;
            image_index = 0;
            
            //End throwing
            jumping = 0;
            
            //Decrement balls
            balls--;
                    
            //If there's balls left
            if (balls &gt; 0)
                alarm[0] = 15;
            else {
            
                balls = 5;
                alarm[0] = 60;
            }
        }
    }

    //Default floor collision
    event_user(4);
    
    //Face towards the player
    if (throwing == 0)
        event_user(8);
}
else
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Perform actions based on animation

if (sprite_index == spr_confusedchuck) {

    //Throw a ball on the same direction
    with (instance_create(x+8*sign(xscale), y, obj_baseball)) hspeed = 1.5*sign(other.xscale);
    
    //Set the default pose
    image_speed = 0;
    image_index = 0;
    
    //Decrement balls
    balls--;
    
    //End throwing
    throwing = 0;
    
    //If there's balls left
    if (balls &gt; 0)
        alarm[0] = 15;
    else {
    
        balls = 5;
        alarm[0] = 60;
    }
}

//Otherwise
else
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
