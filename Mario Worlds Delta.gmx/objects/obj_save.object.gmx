<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_save</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-15</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Manages save animation
ready = 0;

//Scale
scale = 0;

//Selection
selection = 0;

//Play message sound
audio_stop_play_sound(snd_message,0,0);

//Display cursor
display = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display / No Display

display = !display;

if (display == false)

    alarm[0] = 10;
    
else

    alarm[0] = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Message box logic

//If scaling up
if (ready == 0) {

    scale += 0.05;
    if (scale &gt; 1) {
    
        //Force set max scale
        scale = 1;
        
        //Display message
        ready = 1;
        
        //Start flashing
        alarm[0] = 20;

    }
}

//Otherwise, if the message is being displayed
else if (ready == 1) {

    //If the player presses the 'Up' key
    if (input_check_pressed(input.up)) {
    
        //Make cursor visible
        display = true;
        alarm[0] = 20;
    
        //Play 'Fireball' sound
        audio_stop_play_sound(snd_fireball, 0, false);
    
        selection = !selection;
    }
    
    //Otherwise, if the player presses the 'Down' key
    else if ((input_check_pressed(input.down))
    || (input_check_pressed(input.select))) {
    
        //Make cursor visible
        display = true;
        alarm[0] = 20;
        
        //Play 'Fireball' sound
        audio_stop_play_sound(snd_fireball, 0, false);
    
        selection = !selection;
        
    }

    if ((input_check_pressed(input.action0))
    || (input_check_pressed(input.action2))) {
    
        if (selection == 0) {
        
            save(global.file)
            audio_stop_play_sound(snd_whistle,0,0);
            
        } else {
        
            audio_stop_play_sound(snd_coin,0,0);
            
        }
    
        ready = 2;
        
    }
    
}

//Otherwise, if scaling down
else if (ready == 2) {

    scale -= 0.05;
    if (scale &lt; 0) {
        
        //Reset the state of the shift key
        keyboard_clear(input.action0);
        keyboard_clear(input.action2);
        
        //Destroy the message box
        instance_destroy();     
        
        with (obj_mapplayer) {
        
            status = mapstate.idle;
        
        }
               
    }    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw the save box
draw_sprite_ext(sprite_index, obj_controller.hud_type, view_xview[0] + view_wview[0]/2, view_yview[0] + view_wview[0] / 2, scale, scale, 0, c_white, 1);

draw_set_font(global.font);

//Set up the colour
draw_set_colour(c_white);

//If the text should be displayed
if (scale == 1) {

    if (display)
    
        draw_sprite_ext(spr_cursor_title, image_index, (view_xview[0] + view_wview[0] / 2) - 96, view_yview[0]+(view_hview[0]/2)+(selection*16)+4, 1, 1, 0, c_white, 1);

    //Draw the text
    draw_text_colour_shadowed((view_xview[0] + view_wview[0] / 2) - 80, view_yview[0]+(view_hview[0]/2)+4, "CONTINUE AND SAVE##CONTINUE WITHOUT SAVE", c_black, c_white, 1, 1, 1, 1);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
