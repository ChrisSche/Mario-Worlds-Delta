<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_palaceswitch_y</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Palace Switch

//Whether the switch is pressed
ready = 0;

//Make solid mask
mysolid = instance_create(x, y, obj_solid);
    mysolid.image_xscale = 2;
    mysolid.image_yscale = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create message

with (instance_create(0, 0, obj_message_new)) {
    
    //Exit automatically
    switchmsg = 1;
    
    //Set the message depending of what switch was pressed
    if (other.sprite_index = spr_palaceswitch_y)
        inisection = "MSG_SWY";
    else if (other.sprite_index = spr_palaceswitch_g)
        inisection = "MSG_SWG";    
    else if (other.sprite_index = spr_palaceswitch_r)
        inisection = "MSG_SWR";    
    else if (other.sprite_index = spr_palaceswitch_b)
        inisection = "MSG_SWB";    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remember yoshi colour

if (global.mount == 1)
    global.mountcolour = obj_yoshi.colour;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch Palace logic

//Check for the player object
var player = collision_rectangle(bbox_left, bbox_top-5, bbox_right, bbox_top+4, obj_playerparent, 0, 1);

//If the player does exist
if (player)
&amp;&amp; (ready == false)
&amp;&amp; ((player.state == statetype.idle) 
|| (player.state == statetype.walk)) {

    //Play 'Explosion' sound
    audio_stop_play_sound(snd_explosion, 0, false);
    
    //Play 'Palace Clear' fanfare
    audio_stop_play_sound(snd_palaceclear, 0, false);
    
    //Destroy solid mask
    with (mysolid) instance_destroy();
    
    //Activate blocks
    switch (sprite_index) {
    
        //Yellow
        case (spr_palaceswitch_y): global.palaceswitch_y = 1; break;
        
        //Green
        case (spr_palaceswitch_g): global.palaceswitch_g = 1; break;
        
        //Red
        case (spr_palaceswitch_r): global.palaceswitch_r = 1; break;
        
        //Blue
        case (spr_palaceswitch_b): global.palaceswitch_b = 1; break;
    }
    
    //Stop both music and timer
    with (obj_levelcontrol) {
    
        musicdisable = true;
        alarm[1] = 1;
        alarm[2] = -1;
        alarm[3] = -1;
        alarm[4] = -1;
    }
    
    //Ready
    ready = 1;
    
    //Clear stage
    global.clear = 1;
    
    //Remember yoshi colour
    alarm[0] = 1;
    
    //Delay message creation
    alarm[1] = 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the switch

draw_sprite_ext(sprite_index, ready, x, y, 1, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
