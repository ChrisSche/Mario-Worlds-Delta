<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_powblock_blue</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_parhold</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pow Block

//Inherit event from parent
event_inherited();

//Whether the player has kicked this pow
ready = 0;

//Make it solid on top
mytop = instance_create(x-8, y+1, obj_platformparent);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy semisolid collision

//Inherit event from parent
event_inherited();

//Destroy semisolid collision
with (mytop) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Held blue brick logic

//If the brick is not held
if (!held) {

    //Previous horizontal speed
    prevhspeed = hspeed;    
    
    //Inherit event
    event_inherited();
    
    //If kicked
    if (ready == 1) {
    
        //If the direction changes or the object makes contact with the ground
        if (hspeed != prevhspeed) 
            event_user(0);
            
        //Check for ground
        if (vspeed == 0)
        &amp;&amp; (gravity == 0)
            event_user(0);
    }
    
    //Grab it if the player is above    
    if (keyboard_check_pressed(global.key_action[1]))
    &amp;&amp; (collision_rectangle(bbox_left, bbox_top-1, bbox_right, bbox_top-1, obj_playerparent, 0, 0))
    &amp;&amp; (can_hold() == true) {
    
        //Make the player hold it
        obj_playerparent.holding = 1;
        
        //Hold
        held = 1;
        
        //Stop movement
        speed = 0;
        gravity = 0;
    }
    
    //Keep semisolid in position
    if (instance_exists(mytop)) {

        mytop.x = x-8;
        mytop.y = bbox_top+1;
    }
}

//Otherwise, keep semisolid away
else {

    //Cancel kick
    ready = false;

    //Make semisolid go away
    if (instance_exists(mytop)) {
    
        mytop.x = -1000;
        mytop.y = -1000;
    }
}

//Cancel bounce if kicked
if (ready == true)
    bouncy = false;
else
    bouncy = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default throw / kick event

//If 'Up' is pressed, throw it upwards
if (keyboard_check(global.key_u)) {

    //Play 'Kick' sound
    audio_play_sound(snd_kick, 0, false);
    
    //Create thump
    instance_create(x, y+8, obj_spinthump);
    
    //Kick it
    ready = 1;
    
    //If the item is not overlapping a solid
    if (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_solid, 1, 0)) {
    
        //Set the horizontal speed
        hspeed = obj_playerparent.hspeed/1.5;
        
        //Boost kick
        y--;
        
        //If the item is not in a water surface
        if (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_swim, 0, 0))
            vspeed = -7;
        else
            vspeed = -3.5;
    }
    
    //Otherwise, get embed
    else
        inwall = true;
}

//Otherwise if 'Down' is pressed, leave it on the ground
else if (keyboard_check(global.key_d)) {
    
    //Check if the object is stuck on a solid and move it
    if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_solid, 1, 0)) {
    
        //Move it to a safe position
        inwall = true;
        
        //Stop it
        hspeed = 0;
    }
    
    //Set the horizontal speed
    hspeed = 0.5*sign(obj_playerparent.xscale);
}

//Otherwise, if neither 'Up' or 'Down' is pressed
else {

    //If the item is not overlapping a solid.
    if (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom,obj_solid, 0, 0)) {
        
        //If the player has horizontal speed
        if (obj_playerparent.hspeed != 0) {
        
            //Play 'Kick' sound.
            audio_play_sound(snd_kick, 0, false);
    
            //Create thump
            instance_create(x, y+8, obj_spinthump);
            
            //Kick it
            ready = 1;
            
            //If the item is underwater
            if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_swim, 0, 0))
                vspeed = -1;
            else
                vspeed = -2;
            
            //If the object is not on contact with a slope
            if (!collision_rectangle(x-2, bbox_bottom-4, x-2, bbox_bottom, obj_slopeparent, 1, 0))
                hspeed = (obj_playerparent.hspeed+1*obj_playerparent.xscale)/1.5;
                
            //Otherwise, do not apply horizontal speed
            else
                hspeed = 0.5*sign(obj_playerparent.xscale);
        }
        
        //Otherwise, leave it on the ground
        else
            hspeed = 0.5*obj_playerparent.xscale;
    }
    else
        inwall = true;
}

//If the object is underwater, begin swim
if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_swim, 0, 0))
    swimming = true;

//Otherwise, do not swim
else
    swimming = false;     
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///KA-POW

//Create used POW
instance_create(x, y+8, obj_powblock_active);

//Create POW instance
instance_create(x, y+8, obj_powblock_killer);

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
