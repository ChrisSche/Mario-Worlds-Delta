<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_clappinchuck</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_charginchuck</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Splitin' Chuck

//Inherit event from chuck
event_inherited();

//Deny alarm 10
alarm[10] = -1;

//Split into 3
alarm[0] = 60;

//Whether chuck is about to split into 3
split = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage offset

if ((hp == 3) &amp;&amp; (split == 0)) {

    //Play 'Beam' sound
    audio_stop_play_sound(snd_beam, 0, false);
    
    //Split done
    split = 1;
    
    //Begin move
    alarm[10] = 60;
    
    //Create two chucks
    with (instance_create(x, y, obj_charginchuck)) {
    
        //Set the jumping sprite
        sprite_index = spr_charginchuck_jump;
    
        //Set the horizontal speed
        hspeed = -1;
        
        //Boost jump
        y--;
        
        //Set the vertical speed
        if (other.swimming)
            vspeed = -2;
        else
            vspeed = -4;
    }
    with (instance_create(x, y, obj_charginchuck)) {

        //Set the jumping sprite
        sprite_index = spr_charginchuck_jump;    
       
        //Set the horizontal speed
        hspeed = 1;
        
        //Boost jump
        y--;
        
        //Set the vertical speed
        if (other.swimming)
            vspeed = -2;
        else
            vspeed = -4;
    }
}

//Otherwise, inherit default event
else
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Splittin' Chuck logic

if (split == 0)
exit;
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
