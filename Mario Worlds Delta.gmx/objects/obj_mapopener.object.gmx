<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_opener</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Opens paths on the world map

//Speed
spd = 1;

//Origin
xorig = 7;
yorig = 7;

//Steps to take per steps
step = 0;

//Direction
direct = 270;

//Play 'Path Reveal' sound
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play a sound

audio_stop_play_sound(snd_pathreveal, 0, false);
alarm[0] = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Path opener logic

//Update steps
step += spd;
while (step &gt;= 1) {

    //Travel through paths
    if (collision_point(x+xorig+cos(degtorad(direct)), y+yorig-sin(degtorad(direct)), obj_pathparent, 1, 0)) {
    
        x += cos(degtorad(direct));
        y += -sin(degtorad(direct));
    }
    else if (collision_point(x+xorig+cos(degtorad(direct))-sin(degtorad(direct)), y+yorig-sin(degtorad(direct))-cos(degtorad(direct)), obj_pathparent, 1, 0)) {
    
        x += cos(degtorad(direct))-sin(degtorad(direct));
        y += -sin(degtorad(direct))-cos(degtorad(direct));
    }
    else if (collision_point(x+xorig+cos(degtorad(direct))+sin(degtorad(direct)), y+yorig-sin(degtorad(direct))+cos(degtorad(direct)), obj_pathparent, 1, 0)) {
    
        x += cos(degtorad(direct))+sin(degtorad(direct));
        y += -sin(degtorad(direct))+cos(degtorad(direct));
    }
    else if (collision_point(x+xorig-sin(degtorad(direct)), y+yorig-cos(degtorad(direct)), obj_pathparent, 1, 0)) {
    
        x += -sin(degtorad(direct));
        y += -cos(degtorad(direct));
        direct += 90;
    }
    else if (collision_point(x+xorig+sin(degtorad(direct)), y+yorig+cos(degtorad(direct)), obj_pathparent, 1, 0)) {
    
        x += sin(degtorad(direct));
        y += cos(degtorad(direct));
        direct -= 90;
    }
    else 
        direct += 180;
    
    //Reset angles
    if (direct &lt; 0) then direct += 360;
    if (direct &gt;= 360) then direct -= 360;
    
    //Stop when inside a node
    node = collision_point(x+xorig, y+yorig, obj_node, 0, 0);
    
    //If there's a node
    if (node) {
    
        //If the player is at the center of the node
        if (x+xorig == node.x+7)
        &amp;&amp; (y+yorig == node.y+7) {
        
            //Stop 'Path Reveal' sound
            audio_stop_sound(snd_pathreveal);
        
            //Play 'Path Reveal End' sound
            audio_play_sound(snd_pathreveal_end, 0, false);
            
            //Check for a panel
            panel = collision_point(x+xorig, y+yorig, obj_levelpanel, 0, 0);
            
            //If there's a panel
            if (panel) {
            
                //Make it visible...
                panel.image_alpha = 1;
                
                //...and remember it
                ds_map_replace(global.worldmap, panel, 1);
            }
        
            //Destroy
            instance_destroy();
        }
    }
    
    //Update step
    step--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_pathparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make it visible

with (other) {

    //Add it to the map
    ds_map_replace(global.worldmap, id, 1)
    
    //If it is not visible, make it visible
    if (image_alpha == 0)
        image_alpha = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
