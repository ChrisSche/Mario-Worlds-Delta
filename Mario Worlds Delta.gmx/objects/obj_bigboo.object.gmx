<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bigboo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_boo</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Big Boo

//Inherit event from parent
event_inherited();

//Do not animate
image_speed = 0;

//Death sprite
deathsprite = spr_bigboo;

//Stomp sprite
stompsprite = spr_bigboo;

//Previous xscale
xscale = 1;
prevxscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Boo "Buddy" logic

//Update death sprite
deathsprite = sprite_index;

//If the player does exist and it's not looking at him.
if (movenow == 1)
&amp;&amp; (instance_exists(obj_playerparent)) {

    //If the player is at the right
    if (obj_playerparent.x &gt; x+32) {
    
        //Set horizontal speed
        hspeed += 0.03;
        
        //Set turning direction
        if (prevxscale != 1)
        &amp;&amp; (sprite_index != spr_bigboo_turn) {
        
            //Set turning animation
            sprite_index = spr_bigboo_turn;
            
            //Animate it
            image_speed = 0.15;
            image_index = 0;
        
            //Set prev xscale
            prevxscale = 1;
        }
    }
    
    //Otherwise, if the player is at the left
    else if (obj_playerparent.x &lt; x-32) {
    
        //Set horizontal speed
        hspeed -= 0.03;
        
        //Set turning direction
        if (prevxscale != -1)
        &amp;&amp; (sprite_index != spr_bigboo_turn) {
        
            //Set turning animation
            sprite_index = spr_bigboo_turn;
            
            //Animate it
            image_speed = 0.15;
            image_index = 0;
        
            //Set prev xscale
            prevxscale = -1;
        }
    }
    
    //If the player is below
    if (obj_playerparent.y &gt; y)
        vspeed += 0.03;
    
    //Otherwise, if it's above
    else if (obj_playerparent.y &lt; y)
        vspeed -= 0.03;
}

//Otherwise, stop moving
else {
    
    //Slow down till it stops
    speed = max(0,abs(speed)-0.03)*sign(speed);
    if (speed &lt; 0.03)
        speed = 0;
}

//Check if the player is not looking at the boo
if (instance_exists(obj_playerparent)) {

    //If the player is not spinjumping
    if (obj_playerparent.jumpstyle != 1) {
    
        //If the player is at the right of the boo
        if (obj_playerparent.x &gt; x+32) {
        
            //If the player is looking at the right, move
            if (obj_playerparent.xscale == 1)
                movenow = 1;
            else
                movenow = 0;
        }
        
        //Otherwise if the player is at the left of the boo
        else if (obj_playerparent.x &lt; x-32) {
        
            //If the player is looking at the left, move
            if (obj_playerparent.xscale == -1)
                movenow = 1;
            else
                movenow = 0;
        }
        
        //Otherwise, do not move
        else
            movenow = 0;
    }
    
    //Otherwise, stop
    else    
        movenow = 0;
}

//Otherwise, do not move
else
movenow = 0;

//Cap speed
if (speed &gt; 0.6) 
    speed = 0.6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop animation

//Set the sprite
sprite_index = spr_bigboo;

//Set facing direction
xscale = prevxscale;

//Do not animate
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw boo

if (taunt == 1)
    draw_sprite_ext(spr_bigboo, 2, round(x), y, xscale, 1, 0, c_white, 1);
else {

    //If not turning
    if (sprite_index != spr_bigboo_turn)
        draw_sprite_ext(spr_bigboo, movenow, round(x), y, xscale, 1, 0, c_white, 1);
    else
        draw_sprite_ext(spr_bigboo_turn, -1, round(x), y, xscale, 1, 0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
