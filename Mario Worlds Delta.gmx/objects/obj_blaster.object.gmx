<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blaster</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9</depth>
  <persistent>0</persistent>
  <parentName>obj_deactivateparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bullet Bill Blaster

//Shoot a bullet bill
alarm[0] = 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shoot a bullet bill

//If the player does not exist, deny event
if (!instance_exists(obj_playerparent)) {

    alarm[0] = 1;
    exit;
}

//Otherwise
else {

    //If there's less than 6 bullets on screen or the player is nearby
    if ((obj_playerparent.x &gt; bbox_left-32) &amp;&amp; (obj_playerparent.x &lt; bbox_right+32)) {
    
        alarm[0] = 1;
        exit;
    }
    
    //Otherwise, if none of the conditions above match, let the shooting begin.
    else {
    
        //If there's 6 or less bullet bills on screen
        if (instance_number(obj_bulletbill) &gt;= 6) {
        
            alarm[0] = 1;
            exit;
        }
    
        //If the player is at the left
        if (obj_playerparent.x &lt; x) {
            
            //If there's not a solid in position, shoot a bullet
            if (!collision_rectangle(bbox_left-1, y, bbox_left-1, y+15, obj_solid, 0, 0)) {
            
                //Play 'Explosion' sound
                audio_stop_play_sound(snd_explosion, 0, false);
                
                //Create bullet bill
                with (instance_create(x+8, y, obj_bulletbill)) {
                
                    image_index = 0;
                    hspeed = -2;
                    with (instance_create(x, y+8, obj_smoke))
                        sprite_index = spr_smoke_16;
                }
                
                //Repeat
                alarm[0] = 90+round(random(120));
            }
            
            //If there's a solid at the left, deny event
            else {
            
                alarm[0] = 1;
                exit;
            }
        }
        
        //Otherwise, if the player is at the right
        else if (obj_playerparent.x &gt; x) {
                    
            //If there's not a solid in position, shoot a bullet
            if (!collision_rectangle(bbox_right+1, y, bbox_right+1, y+15, obj_solid, 0, 0)) {
            
                //Play 'Explosion' sound
                audio_stop_play_sound(snd_explosion, 0, false);
                
                //Create bullet bill
                with (instance_create(x+8, y, obj_bulletbill)) {
                
                    image_index = 4;
                    hspeed = 2;
                    with (instance_create(x, y+8, obj_smoke))
                        sprite_index = spr_smoke_16;
                }
                
                //Repeat
                alarm[0] = 90+round(random(120));
            }
            
            //If there's a solid at the left, deny event
            else {
            
                alarm[0] = 1;
                exit;
            }            
        }          
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set collision based on height

with (instance_create(x, y, obj_solid)) image_yscale = other.image_yscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw blaster

//Top
draw_sprite_ext(sprite_index, 0, round(x), round(y), 1, 1, 0, c_white, 1);

//Middle / Bottom
if (image_yscale &gt; 1) {

    draw_sprite_ext(sprite_index, 1, round(x), round(y)+16, 1, 1, 0, c_white, 1);
    if (image_yscale &gt;= 2) {
    
        draw_sprite_ext(sprite_index, 2, round(x), round(y)+32, 1, image_yscale-2, 0, c_white, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
