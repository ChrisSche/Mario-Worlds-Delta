<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shell_kamikaze</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kamikaze Koopa

//Inherit event from parent
event_inherited();

//How vulnerable is this enemy to items
vulnerable = 0;

//How vulnerable is this enemy to the player
stomp = 4;

//How vulnerable is this enemy to Yoshi
edible = 1;

//Death Sprite
deathsprite = spr_koopa_yellow_dead;

//Stomp sprite
stompsprite = spr_koopa_yellow_dead;

//Whether the enemy is charging at the player
charge = 0;

//Combo
hitcombo = 0;

//Sets the colour
isflashing = 0;
alarm[11] = 4;

//Animate
image_speed = 0.3;

//Start moving
alarm[10] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change colour

//Repeat the process
alarm[11] = 4;

//Replace colour
isflashing++;
if (isflashing &gt; (pal_swap_get_pal_count(spr_palette_brick_blue)-1))
    isflashing = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Charge towards the player

charge = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kamikaze Koopa

//Previous hspeed
prevhspeed = hspeed;

//Inherit event
event_inherited();

//If the direction changed, speed up
if (hspeed != prevhspeed) {

    //Play 'Bump' sound
    audio_stop_play_sound(snd_bump, 0, false);

    //Set the horizontal speed
    hspeed = sign(hspeed)*2;
        
    //Bump blocks
    instance_create(x-8, y, obj_blockbumper);
    
    //Create wall smash
    instance_create(x+(5*sign(prevhspeed)), y+8, obj_shellthump);
}
    
//Keep charging at the player
if (charge == 1) {

    //If there's no gravity
    if (gravity == 0) {
        
        //Follow the player
        if (!instance_exists(obj_playerparent))
        || (obj_playerparent.x &lt; x) {
        
            hspeed -= 0.1;
            if (hspeed &lt; -2)
                hspeed = -2;
        }
        else {
        
            hspeed += 0.1;
            if (hspeed &gt; 2)
                hspeed = 2;
        }
    }
}

//Face towards the player
if (!instance_exists(obj_playerparent))
|| (obj_playerparent.x &lt; x)
    xscale = -1;
else
    xscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn into a koopa shell and flip it

//If the object colliding is yoshi's tongue
if (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_tongue, 0, 0)) {
    
    //Revert to default death event
    event_user(0);
    exit;
}

//Create dead enemy object
imdead = instance_create(round(bbox_left+bbox_right)/2, y-2, obj_shell);

//Set up the sprite
imdead.sprite_index = spr_shell_kamikaze;

//Set up the xscale
imdead.image_xscale = 1;

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UNUSED ON THIS OBJECT
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy if the player is doing a spin jump or it is riding a yoshi

//If the player is doing a spin jump or it is riding a yoshi
if (global.mount == 1)
|| (other.jumpstyle == 1) {

    //Force stop stomp sound
    audio_stop_sound(snd_stomp);
    
    //Destroy spin effects
    with (obj_spinthump) instance_destroy();

    //Create spin smoke effect
    instance_create(round(bbox_left+bbox_right)/2, round(bbox_top+bbox_bottom)/2, obj_spinsmoke);
    
    //Get points based on combo
    if (other.hitcombo &lt;= 6) //If the player did 6 or less consecutive stomps
        with (instance_create((bbox_left+bbox_right)/2-8, bbox_top, obj_score)) event_user(2+obj_playerparent.hitcombo);
    else
        with (instance_create((bbox_left+bbox_right)/2-8, bbox_top, obj_score)) event_user(9);
    
    //Increment combo
    other.hitcombo++;
    
    //Bounce against if riding or just stop
    if (global.mount &gt; 0) {
    
        //Bounce
        with (other) event_user(1);
        
        //Create two fireballs if the player is wearing a red shoe
        if (global.mount == 2)
        &amp;&amp; (global.mountcolour = 1) {
        
            with (instance_create(x+12, y+8, obj_fireball)) hspeed = 1.5;
            with (instance_create(x-12, y+8, obj_fireball)) hspeed = -1.5;
        }
    }
    else {
    
        if (enemy_check() == false)
            other.vspeed = 0;
        else
            with (other) event_user(1);
    }
        
    //Destroy
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Shell

//Set the shader
if (isflashing &gt; 0) {

    pal_swap_set(spr_palette_brick_blue, isflashing);
}

//Draw it
draw_sprite_ext(sprite_index, -1, round(x), round(y)+1, 1, 1, 0, c_white, 1);

//Reset shader
pal_swap_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
