<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_qblock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>8</depth>
  <persistent>0</persistent>
  <parentName>obj_blockparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Block

//Item held on block
sprout = itemtype.coin;

//Timer
timer = 0;

//Coins collected
coins = 0;

//Inherit event from parent object
event_inherited();

//Shard sprite
shardsprite = spr_shard_flip;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End coin timer

timer = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_powblock_killer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bump the block

//If the block can be hit
if (ready == 0) {

    //Begin bump sequence
    vspeed = -2.25;
    alarm[0] = 4;
    alarm[3] = 4;
    
    //Block is hit
    ready = 1;
    
    //Perform block events
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_modparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Modifies the item inside this block

if (sprout == itemtype.coin) {

    //Obtain ID from modifier
    sprout = other.item_id;
    
    //Destroy modifier
    with (other) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End block 

//If this item held more than 1 coin
if (sprout == itemtype.coin_multi) 
|| (sprout == itemtype.coin_multi_shroom) {

    //If the timer is still going on, allow the block to be hit again.
    if (global.player == 0)
    &amp;&amp; (timer &lt; 2)
        ready = 0;
        
    //Otherwise, perform end of bump event from parent
    else {
    
        //If the player collected 10 or more coins
        if (coins &gt;= 10) 
        &amp;&amp; (sprout == itemtype.coin_multi_shroom) {
        
            //Sprout out a mushroom
            with (instance_create(x+8, y, obj_powerup_sprout))
                sprite_index = enum_get_sprite(itemtype.mushroom);
        }
    
        //Inherit event from parent
        event_inherited();
    }
}

//Otherwise, if this item holds a starman and the player is invincible
else if (sprout == itemtype.coin_star) {

    //If the player is still invulnerable
    if (instance_exists(obj_invincibility)) {
    
        //Sprout out a starman
        with (instance_create(x+8, y, obj_powerup_sprout))
            sprite_index = enum_get_sprite(itemtype.star);
    }
    
    //Inherit event
    event_inherited();
}

else {

    //If the item inside is not a coin
    if (sprout != itemtype.coin) {
    
        //If the player is small
        with (instance_create(x+8, y, obj_powerup_sprout))    
            sprite_index = enum_get_sprite(other.sprout);
    }

    //Inherit event from block
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create a coin

//If the block holds more than 1 coin
if (sprout == itemtype.coin_multi) 
|| (sprout == itemtype.coin_multi_shroom) {

    //If Luigi is not being controlled
    if (global.player != 1) 
    || (sprout == itemtype.coin_multi_shroom) {
    
        //Engage timer
        if (timer == 0) {
        
            //Activate timer
            timer = 1;
            
            //End timer
            alarm[2] = 240;
        }
        
        //Increment coins
        coins++;
    }
    
    //Otherwise
    else {
    
        //Play 'Coin Big' sound
        audio_play_sound(snd_coin_big, 0, false);
    
        //Repeat 10 times
        repeat (10) {
        
            with (instance_create(x, ystart-16, obj_coin)) {
            
                //Allow gravity
                ready = 1;
                
                //Disappear after a while
                alarm[0] = 240;
                alarm[1] = 360;
                
                //Set vertical speed
                vspeed = random_range(-2, -4);                
                
                //Set horizontal speed
                hspeed = random_range(-1.5, 1.5);                
            }
        }
    }
}

//Create the coin
if (sprout == itemtype.coin)
|| (sprout == itemtype.coin_multi_shroom)
|| ((sprout == itemtype.coin_multi) &amp;&amp; (global.player != 1))
|| ((sprout == itemtype.coin_star) &amp;&amp; (instance_number(obj_invincibility) == 0))
    instance_create(x, ystart-16, obj_blockcoin);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
