<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cheepcheep</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Horizontal Cheep-Cheep

//Inherit event
event_inherited();

//How vulnerable is this enemy to various items?
vulnerable = 0;

//How vulnerable is this enemy to the player?
stomp = 2;

//How vulnerable is this enemy to yoshi?
edible = 0;

//Facing direction
xscale = 1;

//Animate
image_speed = 0.125;

//Sets turning endpoint
prevswim = 0;
xx = x;

//Death Sprite
deathsprite = spr_cheepcheep_dead;

//Flopping facing direction
flopdir = 1;

//Start moving or flop
if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_swim, 0, 0))
    alarm[10] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start moving

//Inherit event
event_inherited();

//Set turning endpoint
if (prevswim == 0) {

    prevswim = 1;
    xx = x;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cheep Cheep logic

//Inherit event
event_inherited();

//If not flopping
if (swimming == 1) {

    //If the turning endpoint has not been set
    if (prevswim == 0) {
    
        hspeed = 0.5*sign(xscale);
        prevswim = 1;
        xx = x;
    }

    //Set the sprite
    sprite_index = spr_cheepcheep;
    
    //Animate
    image_speed = 0.125;
    
    //Do not apply gravity
    vspeed = 0;
    gravity = 0;
    
    //If the cheep cheep is moving to the right.
    if (hspeed &gt; 0) {
    
        //Set the facing direction
        xscale = 1;
        
        //Change direction
        if (x &gt; xx+32)
            hspeed = -hspeed;
    }
    
    //Otherwise, if the cheep cheep is moving to the left.
    else if (hspeed &lt; 0) {
    
        //Set the facing direction.
        xscale = -1;
            
        //Change direction.
        if (x &lt; xx-32)    
            hspeed = -hspeed;
    }
}

//Otherwise, if flopping
else if (swimming == 0) {

    //Reset turning endpoint
    prevswim = 0;

    //Set the flopping sprite
    sprite_index = spr_cheepcheep_flop;
    
    //Do not animate
    image_speed = 0;
    
    //If no gravity
    if (gravity == 0) {
    
        //Change frame
        image_index = !image_index;
    
        //Choose flop
        flopdir = choose(1, -1);
        
        //Set horizontal speed
        hspeed = 1*sign(flopdir);
        
        //Set the vertical speed
        vspeed = -2;
    }
    
    //Set facing direction
    xscale = flopdir;    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Special player collision event

//If the player is invulnerable, exit
if (instance_exists(obj_invincibility))
exit;

//If flopping, defeat instantly
if (swimming == 0) {
    
    //If the player is sliding down a slope
    if (other.sliding == 1) {
    
        event_perform_object(obj_enemyparent, ev_collision, obj_killparent);
        exit;
    }
        
    //Otherwise
    else {
    
        //Play 'Kick' sound
        audio_play_sound(snd_kick, 0, false);
    
        //Create dead object
        with (instance_create(round(bbox_left+bbox_right)/2, round(bbox_top+bbox_bottom)/2, obj_enemy_dead)) {
        
            sprite_index = other.deathsprite;
            image_xscale = other.xscale;
            vspeed = -3;
        }        
    }
    
    //Get 200 points
    with (instance_create(x-8,y,obj_score)) event_user(2);
    
    //Create spin thump
    instance_create(round(bbox_left+bbox_right)/2, round(bbox_top+bbox_bottom)/2, obj_spinthump);
    
    //Make the player visually kick the enemy
    with (other) event_user(4);
    
    //Destroy
    instance_destroy();
}

//Otherwise
else
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default wall collisions.

if ((hspeed &lt; 0) &amp;&amp; (collision_rectangle(bbox_left-hspeed, bbox_top+4, bbox_left, bbox_bottom-4,obj_solid,0,0)))
|| ((hspeed &gt; 0) &amp;&amp; (collision_rectangle(bbox_right, bbox_top+4, bbox_right+hspeed, bbox_bottom-4,obj_solid,0,0))) {

    //Reverse horizontal speed
    hspeed = hspeed*-1;
    
    //Reverse facing direction
    xscale = xscale*-1;
    
    //Prevent getting embed on a slope.
    while (collision_rectangle(bbox_left, bbox_top+4, bbox_left, bbox_bottom-4,obj_solid,0,0))
        x++;
    while (collision_rectangle(bbox_right, bbox_top+4, bbox_right, bbox_bottom-4,obj_solid,0,0))
        x--;        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Cheep Cheep

draw_sprite_ext(sprite_index, -1, round(x), round(y)+1, xscale, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
