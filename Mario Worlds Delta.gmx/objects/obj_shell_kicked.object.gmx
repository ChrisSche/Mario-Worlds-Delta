<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_enemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kicked Koopa Shell

//Inherit event from parent
event_inherited();

//How vulnerable is this enemy to items
vulnerable = 0;

//How vulnerable is this enemy to the player
stomp = 0;

//How vulnerable is this enemy to Yoshi
edible = 0;

//Death Sprite
deathsprite = spr_koopa_dead;

//Combo
hitcombo = 0;

//Whether this shell is flipped
flip = 0;

//Whether there's a koopa inside this shell
koopainside = 0;

//Whether this shell can harm the player
harmplayer = 0;

//Bounce
bouncy = true;

//Animate
image_speed = 0.3;

//Check sprite and set vulnerabilities
event_user(15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kicked Koopa Shell logic

//Previous horizontal speed
prevhspeed = hspeed;    

//Inherit event
event_inherited();

//Check for 1 block gaps and blocks in the way
event_user(8);

//If the direction changes...
if (hspeed != prevhspeed) {

    //If the item is not outside
    if (!outside_view(8)) {
    
        //Play 'Bump' sound
        audio_play_sound(snd_bump, 0, false);
    }
        
    //Bump blocks
    instance_create(x-8, y, obj_blockbumper);
    
    //Create wall smash
    instance_create(x+(5*sign(prevhspeed)), y+8, obj_shellthump);
}

//Permit the shell to harm the player
if (harmplayer == 0)
&amp;&amp; (!place_meeting(x, y, obj_playerparent))
    harmplayer = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherit event from player

if (harmplayer == 0)
exit;
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check sprite and set vulnerabilities

//Red Koopa
if (sprite_index == spr_shell_red)
    deathsprite = spr_koopa_red_dead;
    
//Gargantua Green Koopa
else if (sprite_index == spr_shell_big) {

    deathsprite = spr_bigkoopa_dead;
    edible = 2;
}

//Gargantua Red Koopa
else if (sprite_index == spr_shell_big_red) {

    deathsprite = spr_bigkoopa_red_dead;
    edible = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for 1 block gaps and destroy blocks on the way

//If there's no gravity
if (gravity == 0) 
&amp;&amp; (!collision_rectangle(bbox_left, bbox_bottom, bbox_right, bbox_bottom+5, obj_slopeparent, 0, 0)) {

    if ((hspeed &lt; 0) &amp;&amp; (!collision_rectangle(x, bbox_bottom+8, x, bbox_bottom, obj_semisolid, 1, 0)))
    || ((hspeed &gt; 0) &amp;&amp; (!collision_rectangle(x, bbox_bottom+8, x, bbox_bottom, obj_semisolid, 1, 0)))
        y += 2;
}

//Check for blocks to the left
var block_l = collision_rectangle(bbox_left-9-hspeed, bbox_top, bbox_left, bbox_bottom, obj_blockparent, 0, 0);
if (block_l)
&amp;&amp; (sprite_height &gt; 16)
    with (block_l) event_user(15);

//Check for blocks to the right    
var block_r = collision_rectangle(bbox_right, bbox_top, bbox_right+9+hspeed, bbox_bottom, obj_blockparent, 0, 0);
if (block_r)
&amp;&amp; (sprite_height &gt; 16)
    with (block_r) event_user(15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn into a koopa shell and flip it

//Create dead enemy object
imdead = instance_create(round(bbox_left+bbox_right)/2, y-2, obj_shell);

//Set up the sprite
imdead.sprite_index = sprite_index;

//Set up the xscale
imdead.image_xscale = 1;

//Set up vertical speed
imdead.vspeed = -5;

//Flip it
imdead.flip = 1;

//Hold or not hold a koopa inside
imdead.koopainside = koopainside;

//If the killer object is at the left of this object, move to the right
if ((other.bbox_left+other.bbox_right/2) &lt; bbox_left+bbox_right/2) 
    imdead.hspeed = 0.5;
    
//Otherwise, move to the left
else if ((other.bbox_left+other.bbox_right/2) &gt; bbox_left+bbox_right/2) 
    imdead.hspeed = -0.5;

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop the shell

//Create a new shell
with (instance_create(x, y, obj_shell)) {

    //Hereby sprite
    sprite_index = other.sprite_index;
    
    //Hereby koopainside state
    koopainside = other.koopainside;
    
    //Hereby flip state
    flip = other.flip;
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Special enemy death script

//Set up death sprite if we didnt yet
event_user(15);

//Inherit event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the shell

//If the shell is small
if (sprite_height &lt; 17) {
    
    if (flip == 0) {
    
        //Draw shell
        draw_sprite_ext(sprite_index, -1, round(x), round(y)+1, image_xscale, 1, 0, c_white, 1);
        
        //If there's a koopa inside
        if (koopainside == 1)
            draw_sprite_ext(spr_koopa_inside, -1, round(x), round(y)+1, image_xscale, 1, 0, c_white, 1);
    }
    else {
    
        //Draw shell
        draw_sprite_ext(sprite_index, -1, round(x), round(y)+17, image_xscale, -1, 0, c_white, 1);
        
        //If there's a koopa inside
        if (koopainside == 1)
            draw_sprite_ext(spr_koopa_inside, -1, round(x), round(y)+17, image_xscale, -1, 0, c_white, 1);
    }
}

//Otherwise
else {
    
    if (flip == 0) {
    
        //Draw shell
        draw_sprite_ext(sprite_index, -1, round(x), round(y)+1, image_xscale, 1, 0, c_white, 1);
        
        //If there's a koopa inside
        if (koopainside == 1)
            draw_sprite_ext(spr_koopa_inside_big, -1, round(x), round(y)+1, image_xscale, 1, 0, c_white, 1);
    }
    else {
    
        //Draw shell
        draw_sprite_ext(sprite_index, -1, round(x), round(y)+1, image_xscale, -1, 0, c_white, 1);
        
        //If there's a koopa inside
        if (koopainside == 1)
            draw_sprite_ext(spr_koopa_inside_big, -1, round(x), round(y)+1, image_xscale, -1, 0, c_white, 1);
    }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
