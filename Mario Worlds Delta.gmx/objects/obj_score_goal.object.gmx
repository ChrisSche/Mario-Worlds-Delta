<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shows how many stars the player obtained on the goal

//Frame to show
frame = 0;

//Colour
colour = c_white;

//Show for 2 seconds
alarm[0] = 120;

//Replace the colour
alarm[1] = 4;

//Fonts
font0 = font_add_sprite_ext(spr_hud_clear_stars0, "0123456789", 0, 8);
font1 = font_add_sprite_ext(spr_hud_clear_stars1, "0123456789", 0, 8);
font2 = font_add_sprite_ext(spr_hud_clear_stars2, "0123456789", 0, 8);
font3 = font_add_sprite_ext(spr_hud_clear_stars3, "0123456789", 0, 8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Replace the colour

alarm[1] = 4;
switch (colour) {

    //White -&gt; Red
    case (c_white): colour = c_smwred; break;

    //Red -&gt; Green
    case (c_smwred): colour = c_smwgreen; break;
    
    //Green -&gt; Yellow
    case (c_smwgreen): colour = c_smwyellow; break;
    
    //Yellow -&gt; Blue
    case (c_smwyellow): colour = c_smwblue; break;

    //Blue -&gt; Red
    case (c_smwblue): colour = c_smwred; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set frame

alarm[0] = 4;
if (frame &lt; 3)
    frame++;
else
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the stars obtained

//Obtain the font
var fnt = font_add_sprite_ext(asset_get_index("spr_hud_clear_stars" + string(frame)), "0123456789", 0, 8);

//Set the font
draw_set_font(fnt);

//Align the text to the center
draw_set_halign(fa_center);

//If the frame is the first one
if (frame == 0)
    draw_text_colour(view_xview[0] + view_wview[0] / 2 + 4, view_yview[0] + 64, string_format(global.bonusadd, 2, 0), colour, colour, colour, colour, 1);
else
    draw_text_colour(view_xview[0] + view_wview[0] / 2 + 4, view_yview[0] + 64, string_format(global.bonusadd, 2, 0), c_white, c_white, c_white, c_white, 1);
    
//Reset alignment
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
