<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_netkoopa_blue</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_netkoopa</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the depth and vulnerability

switch (depth) {

    //If behind a fence, turn vulnerable
    case (11): {
    
        //Set the sprite
        sprite_index = spr_netkoopa_red
    
        //Set vulnerability
        vulnerable = 0;
        
        //Set stomp grade
        stomp = 0;
        
        //Set depth
        depth = -1;
    } break;
    
    //Otherwise if it's on front of a fence, turn invulnerable
    case (-1): {
    
        //Set the sprite
        sprite_index = spr_netkoopa_red_b;
    
        //Set vulnerability
        vulnerable = 100;
        
        //Set stomp grade
        stomp = -1;
        
        //Set depth
        depth = 11;
    } break;
}

//Animate
image_speed = 0.15;

//Choose new direction
switch (ready) {

    //Down
    case (2): {
    
        ready = 0;
        vspeed = 1;
    } break;
    
    //Right
    case (3): {
    
        ready = 1;
        hspeed = 1;
    } break;
    
    //Up
    case (0): {
    
        ready = 2;
        vspeed = -1;
    } break;
    
    //Left
    case (1): {
    
        ready = 3;
        hspeed = -1;
    } break;
}

//Can turn again
alarm[1] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Net koopa logic

//If there's not a climbing spot
if ((hspeed &lt; 0) &amp;&amp; (!position_meeting(bbox_left-1, y, obj_climb)))
|| ((hspeed &gt; 0) &amp;&amp; (!position_meeting(bbox_right+1, y, obj_climb)))
|| ((vspeed &lt; 0) &amp;&amp; (!position_meeting(x, bbox_top-1, obj_climb)))
|| ((vspeed &gt; 0) &amp;&amp; (!position_meeting(x, bbox_bottom+1, obj_climb))) {

    //Reverse horizontal or vertical direction
    hspeed = -hspeed;
    vspeed = -vspeed;
}

//Wall collision
event_user(3);

//Set default death sprite
deathsprite = sprite_index;

//Set default stomp sprite
stompsprite = sprite_index;

//If moving up and there's a ceiling in place
if (vspeed &lt; 0) {

    if (collision_rectangle(bbox_left, bbox_top-1, bbox_right, bbox_top, obj_solid, 0, 0))
    || (collision_rectangle(bbox_left, bbox_top-1, bbox_right, bbox_top, obj_slopeparent_ceiling, 1, 0)) {
    
        //Prevent getting embed on ceiling
        while (collision_rectangle(bbox_left, bbox_top-1, bbox_right, bbox_top, obj_solid, 0, 0))
            y++;
            
        //Reverse vertical movement
        vspeed = -vspeed;
    }
}

//Otherwise,  if moving down and there's a semisolid in place
else if (vspeed &gt; 0)  
&amp;&amp; (collision_rectangle(bbox_left, bbox_bottom, bbox_right, bbox_bottom, obj_semisolid, 0, 0))
    vspeed = -vspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start moving

switch (ready) {

    case (0): vspeed = 1; break;
    case (1): hspeed = 1; break;
    case (2): vspeed = -1; break;
    case (3): hspeed = -1; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
