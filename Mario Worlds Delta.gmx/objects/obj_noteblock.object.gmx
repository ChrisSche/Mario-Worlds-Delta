<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_noteblock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>8</depth>
  <persistent>0</persistent>
  <parentName>obj_blockparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Note block

//Item held on block
sprout = itemtype.coin;

//Inherit event from parent object
event_inherited();

//Animate
image_speed = 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return to start position and allow block hit

//Return to start position
x = xstart;
y = ystart;

//Stop movement
speed = 0;

//Allow hit again
ready = 0;

//If the item inside is not a coin
if (sprout != itemtype.coin) 
&amp;&amp; (sprout != itemtype.coin_star)
&amp;&amp; (sprout != itemtype.coin_multi) {

    //If the player is small
    with (instance_create(x+8, y, obj_powerup_sprout)) {
    
        sprite_index = enum_get_sprite(other.sprout);
    }
    
    //End item sprout
    sprout = itemtype.coin;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Note block bumping

//If the block can be bumped
if (!ready) {

    //If the player bumps from above
    if (collision_rectangle(bbox_left, bbox_top-1, bbox_right, bbox_top,obj_playerparent,0,0)) {
        
        //This block is hit
        ready = 1;

        //Move down
        vspeed = 2.25;
        alarm[0] = 4;

        //Make the player bounce
        with (obj_playerparent) {
        
            //Play 'Trampoline' sound
            audio_play_sound(snd_trampoline, 0, false);

            //Set the vertical speed
            vspeed = -note_boost;
            
            //Boost jump
            y--;
            
            //Switch to jump state
            state = statetype.jump;
            
            //Check if the 'Jump' key is pressed and allow variable jumping
            if (input_check(input.action0))
            || (input_check(input.action2))
                jumping = 1;
            else
                jumping = 2;
        }
        
        //Create notes
        with (instance_create(bbox_left, bbox_top, obj_note)) motion_set(135,1);
        with (instance_create(bbox_right, bbox_top, obj_note)) motion_set(45,1);
        
        //Make an item appear downwards
        event_user(1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_modparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Modifies the item inside this block

if (sprout == itemtype.coin) {

    //Obtain ID from modifier
    sprout = other.item_id;
    
    //Destroy modifier
    with (other) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Allow block hit and sprout an item downwards

//Sprout out an item
if (sprout != itemtype.coin)
&amp;&amp; (sprout != itemtype.coin_star)
&amp;&amp; (sprout != itemtype.coin_multi) {

    //If the item to sprout is a cape feather
    if (sprout == itemtype.feather)
        with (instance_create(xstart+8, ystart, obj_feather_sprout)) alarm[1] = 1;
        
    //If the item to sprout is a beanstalk
    else if (sprout == itemtype.beanstalk) {
    
        //Play 'Vine Sprout' sound
        audio_play_sound(snd_vinesprout, 0, false);
        
        //Create beanstalk
        with (instance_create(xstart+8, ystart, obj_beanstalk)) 
            vspeed = 1;
    }
        
    //Otherwise, if the item to sprout is a mushroom/feather
    else if (sprout == itemtype.feather_plus) {
    
        //If the player is small, sprout a mushroom
        if (global.powerup == cs_pow_small) {
        
            with (sprite_create_object(xstart+8, ystart, spr_mushroom))
                permission = 0;
        }
        
        //Otherwise, sprout a feather
        else
            with (instance_create(xstart+8, ystart, obj_feather_sprout)) alarm[1] = 1;
    }
    else {
    
        //Temporary variable
        var myenum = enum_get_sprite(sprout);

        //Create the item
        with (sprite_create_object(xstart+8, ystart, myenum))
            permission = 0;
    }

    //Reset the item
    sprout = itemtype.coin;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
