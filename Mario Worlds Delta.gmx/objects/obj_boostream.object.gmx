<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boobuddy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Boo Stream

//Boo stream length
streamsize = 6;

//Boo stream speed
streamspeed = 1;

//Distance between boos
boodistance = 8;

//Inherit event from parent
event_inherited();

//How vulnerable is this enemy to items
vulnerable = 99;

//How vulnerable is this enemy to the player
stomp = -1;

//How vulnerable is this enemy to Yoshi
edible = 2;

//Death Sprite
deathsprite = spr_boobuddy_dead;

//Do not swim
swimming = false;

//Create boo stream
alarm[0] = 2;

//Handle which type of Boo
type = 0;
animframe = 0;

//Parent child
parent = 0;
isparent = true;
age = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make the boo stream

if (!isparent) exit;

if (streamsize &gt; 0) {

    with (instance_create(x, y, obj_boostream)) {
    
        parent = other;
        type = irandom_range(0,2);
        isparent = false;
        depth = other.depth + 1;
        image_xscale = other.image_xscale;
        streamsize = other.streamsize;        
    }    
    alarm[0] = boodistance;
}

with (obj_boostream) {

    if (!isparent) {
    
        if (parent = other.id) {
        
            age ++;
            if (age &gt; streamsize) 
                instance_destroy()            
        }        
    }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Boo stream movement

//Animation
animframe += 0.125;
if (animframe &gt;= 2)
    animframe = 0;

image_index = animframe + (type * 2);

//If parent
if (isparent) {

    //Set up initial movement
    if (hspeed = 0) {
    
        vspeed = streamspeed;
        if (instance_exists(obj_playerparent)) {
        
            if (x &gt; obj_playerparent.x)
                hspeed = -streamspeed;
            else 
                hspeed = streamspeed;
        } 
        else
            hspeed = streamspeed;
    }

    //Collision with walls
    t = collision_line(bbox_left, bbox_top, bbox_right, bbox_top, obj_solid, 1, 0);
    b = collision_rectangle(bbox_left, bbox_bottom, bbox_right, bbox_bottom+1, obj_semisolid, 1, 0);
    b2 = collision_rectangle(bbox_left, bbox_bottom, bbox_right, bbox_bottom+1, obj_solid, 1, 0);
    l = collision_rectangle(bbox_left-1, bbox_top, bbox_left, bbox_bottom, obj_solid, 1, 0);
    r = collision_rectangle(bbox_right, bbox_top, bbox_right+1, bbox_bottom, obj_solid, 1, 0);
    
    if hspeed != 0 &amp;&amp; vspeed != 0 {
    
        if (r) {
        
            hspeed = -streamspeed;
        }
        
        if (l) {
        
            hspeed = streamspeed;
        }
        
        if (t) {
        
            vspeed = streamspeed;
        }
        
        if (b || b2) {
        
            vspeed = -streamspeed;
        }    
    }
    
    //Handle image flipping
    xscale = 1*sign(hspeed);
}

///Destroy stream children if destroyed
if (!isparent)
    if (!instance_exists(parent))
        instance_destroy();        
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hurt the player on impact since Boo stream is invincible

var player = collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_playerparent, 0, 0);
if (player)
    with (player) event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw boo stream
draw_sprite_ext(sprite_index, image_index, round(x), y, xscale, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
