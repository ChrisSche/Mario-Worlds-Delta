<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goomba</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The parent object for all enemies

//How vulnerable is this enemy to the player
//0: Normal
//1: Immune to fireball
//2: Immune to cape
//3: Immune to both fireball and cape
//99: Invincible
//100: Invincible + Ignore projectiles
vulnerable = 0;

//How vulnerable is this enemy to the player
//0: Normal
//1: Hurt Player
//2: Hurt Player + Yoshi Immunity
//3: Solid on top
//4: Stomp only
//-1: Phase through Player
stomp = 0;

//How vulnerable is this enemy to Yoshi
//0: Eatable
//1: Eatable, create item
//2: Not eatable
//3: Not eatable, phase through tongue
edible = 0;

//Facing direction
xscale = -1;

//Death Sprite
deathsprite = spr_goomba_dead;

//Stomp sprite
stompsprite = spr_goomba_sq;

//Inherit event from parent
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Detect the player and move towards it

if (!instance_exists(obj_playerparent))
&amp;&amp; (obj_playerparent.x &lt; x)
    hspeed = -0.5;
else
    hspeed = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy when stomped

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy parent logic

//Inherit event from parent
event_inherited();

//Turn at enemies script
event_user(2);

//Update facing direction
if (hspeed != 0)
    xscale = 1*sign(hspeed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with the player

//If the player is invulnerable, deny event
if (instance_exists(obj_invincibility))
exit;

//If the enemy is invulnerable to stomp or the player is invulnerable
if (stomp != -1)
|| (other.invulnerable == -1) {

    //If the player is sliding down a slope
    if (vulnerable &lt; 99)
    &amp;&amp; (other.sliding == true) {
    
        //Get points based on combo
        if (other.hitcombo == 0) { //200 points
        
            audio_play_sound(snd_kick, 0, false);
            with (instance_create((bbox_left+bbox_right)/2, bbox_top, obj_score))
                event_user(2);
        }
        else if (other.hitcombo == 1) { //400 points
        
            audio_play_sound(snd_kick, 0, false);
            with (instance_create((bbox_left+bbox_right)/2, bbox_top, obj_score))
                event_user(3);
        }
        else if (other.hitcombo == 2) { //800 points
        
            audio_play_sound(snd_kick, 0, false);
            with (instance_create((bbox_left+bbox_right)/2, bbox_top, obj_score))
                event_user(4);
        }
        else if (other.hitcombo == 3) { //1000 points
        
            audio_play_sound(snd_kick, 0, false);
            with (instance_create((bbox_left+bbox_right)/2, bbox_top, obj_score))
                event_user(5);
        }
        else if (other.hitcombo == 4) { //2000 points
        
            audio_play_sound(snd_kick, 0, false);
            with (instance_create((bbox_left+bbox_right)/2, bbox_top, obj_score))
                event_user(6);
        }
        else if (other.hitcombo == 5) { //4000 points
        
            audio_play_sound(snd_kick, 0, false);
            with (instance_create((bbox_left+bbox_right)/2, bbox_top, obj_score))
                event_user(7);
        }
        else if (other.hitcombo == 6) { //8000 points
        
            audio_play_sound(snd_kick, 0, false);
            with (instance_create((bbox_left+bbox_right)/2, bbox_top, obj_score))
                event_user(8);
        }
        else if (other.hitcombo &gt; 6) { //1-UP
        
            audio_play_sound(snd_kick, 0, false);
            with (instance_create((bbox_left+bbox_right)/2, bbox_top, obj_score))
                event_user(9);                    
        }
            
        //Kill the enemy
        event_user(0);        
        
        //Create 'Spinthump' effect
        instance_create(round(bbox_left+bbox_right)/2, round(bbox_top+bbox_bottom)/2, obj_spinthump);
                
        //Increment hitcombo
        other.hitcombo++;   
    }
    
    //Otherwise, if the player is not sliding
    else {
    
        //If the player is above the enemy and moving down
        if (other.bbox_bottom &lt; bbox_top-vspeed+5) {
    
            //If the player is spin jumping
            if (stomp != 3)
            &amp;&amp; ((other.jumpstyle == 1) || (global.mount &gt; 0)) {
    
                //If this enemy is not immune to spin jumps
                if (stomp == 0)
                || (stomp == 4)
                || ((stomp == 1) &amp;&amp; (global.mount &gt; 0)) {
                
                    //Create spin smoke effect
                    instance_create((bbox_left+bbox_right)/2-8, y, obj_spinsmoke);
                    
                    //Get points based on combo
                    if (other.hitcombo &lt;= 6) //If the player did 6 or less consecutive stomps
                        with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) event_user(2+obj_playerparent.hitcombo);
                    else {
                    
                        audio_play_sound(snd_1up, 0, false);
                        with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) 
                            event_user(9);
                    }
                    
                    //Increment combo
                    other.hitcombo++;
                    
                    //Bounce against if riding or just stop
                    if (global.mount &gt; 0) {
                    
                        //Bounce
                        with (other) event_user(1);
                        
                        //Create two fireballs if the player is wearing a red shoe
                        if (global.mount == 2)
                        &amp;&amp; (global.mountcolour = 1) {
                        
                            with (instance_create(x+12,y+8,obj_fireball)) hspeed = 1.5;
                            with (instance_create(x-12,y+8,obj_fireball)) hspeed = -1.5;
                        }
                    }
                    else
                        other.vspeed = 0;
                        
                    //Destroy
                    instance_destroy();
                }
                
                //Otherwise, spin on spiky enemies
                else {
                
                    //Play 'Stomp' sound
                    audio_play_sound(snd_stomp, 0, false);
                    
                    //Create spin smoke
                    with (instance_create(other.x,other.bbox_bottom-8,obj_smoke)) sprite_index = spr_spinthump;
                    
                    //Bounce
                    with (other) event_user(1);
                }    
            }
    
            //Regular stomp
            else if ((stomp == 0) || (stomp == 4)) {
            
                //Play 'Stomp' sound
                audio_play_sound(snd_stomp, 0, false);
            
                //Prevent certain enemies from getting double stomped
                if (vspeed &lt; 0) {
                
                    y = yprevious;
                    if (other.vspeed &gt; 0)
                        other.y = other.yprevious;
                }
                
                //Bounce the player
                with (other) event_user(1);
                
                //If the enemy does give points
                if (stomp == 0) {
                
                    //Get points based on combo
                    if (other.hitcombo &lt;= 6) //If the player did 6 or less consecutive stomps
                        with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) event_user(2+obj_playerparent.hitcombo);
                    else {
                            
                        //If the combo is odd
                        if (other.hitcombo % 2 == 1)
                            with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) event_user(9);
                        
                        //Otherwise, if the combo is even
                        else if (other.hitcombo % 2 == 0)
                            with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) event_user(10);        
                    }
                    
                    //Increment combo
                    other.hitcombo++;
                }
                
                //Create spin smoke
                instance_create(other.x, other.bbox_bottom-8, obj_spinthump);
                
                //Stomp the enemy
                event_user(1);                
            }
        }
    
        //Otherwise, hurt the player
        else
            with (other) event_user(0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default flip script

//Mainly for enemies that can be held after stunning
//Defaults to dead script
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn at ledges script

///Turn at ledges script

//If the object is affected by gravity
if (gravity == 0) {

    //If moving left
    if (hspeed &lt; 0) {
    
        //If there's no ground on the way, turn around
        if (!collision_rectangle(bbox_left+3, bbox_bottom-1, bbox_left+3, bbox_bottom+4, obj_semisolid, 0, 0))
        &amp;&amp; (!collision_rectangle(bbox_left+3, bbox_bottom-1, bbox_left+3, bbox_bottom+5, obj_slopeparent, 1, 0))
            hspeed = -hspeed;
    }
    
    //Otherwise, if moving right
    else if (hspeed &gt; 0) {
    
        //If there's no ground on the way, turn around
        if (!collision_rectangle(bbox_right-3, bbox_bottom-1, bbox_right-3, bbox_bottom+4, obj_semisolid, 0, 0))
        &amp;&amp; (!collision_rectangle(bbox_right-3, bbox_bottom-1, bbox_right-3, bbox_bottom+5, obj_slopeparent, 1, 0))
            hspeed = -hspeed;            
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn at enemies script

//Collision with regular enemies
var overlap = collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom-4, obj_enemyparent, 0, 1);
if (overlap) 
&amp;&amp; (overlap.vulnerable &lt; 99) {

    //Go right if the object is further to the right or in the same spot and a higher id.
    if ((bbox_left+bbox_right)*0.5 &gt; (overlap.bbox_left+overlap.bbox_right)*0.5)
    || (((bbox_left+bbox_right)*0.5 = (overlap.bbox_left+overlap.bbox_right)*0.5) &amp;&amp; (id &gt; overlap.id))
        hspeed = abs(hspeed);
    
    //Otherwise, go left.
    else
        hspeed = -abs(hspeed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default enemy stomp script

//Set up the sprite
sprite_index = stompsprite;

//Do not animate
image_speed = 0;
image_index = 0;

//Make intangible
vulnerable = 100;
stomp = -1;
edible = 3;

//Stop it
hspeed = 0;

//Destroy after a while
alarm[0] = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default enemy death script

//Get offsets
var yy = sprite_get_yoffset(sprite_index) + 8;

//Create dead enemy object
imdead = instance_create(x, y+yy, obj_enemy_dead);

//Set up the sprite
imdead.sprite_index = deathsprite;

//Set up the xscale
imdead.image_xscale = xscale;

//Set up vertical speed
imdead.vspeed = -3;

//If the killer object is not moving
if (other.hspeed == 0) {

    //If the killer object is at the left of this object, move to the right
    if ((other.bbox_left+other.bbox_right/2) &lt; bbox_left+bbox_right/2)
        imdead.hspeed = 1;
        
    //Otherwise, move to the left
    else if ((other.bbox_left+other.bbox_right/2) &gt; bbox_left+bbox_right/2)
        imdead.hspeed = -1;
}

//Otherwise, if the killer object is moving
else {

    //If the kill object is the player, hereby player's hspeed
    if (other.object_index == obj_playerparent) {
    
        //If the player is sliding
        if (other.sliding == true)
            imdead.hspeed = other.hspeed;
    }
    
    //Otherwise, if the kill object is the cape or a block
    else if (other.object_index == obj_spinner) 
         || (other.object_index == obj_blockparent) {
    
        //Set vertical speed
        imdead.vspeed = -6;

        //If the killer object is at the left of this object, move to the right
        if ((other.bbox_left+other.bbox_right/2) &lt; bbox_left+bbox_right/2)
            imdead.hspeed = 0.5;
            
        //Otherwise, move to the left
        else if ((other.bbox_left+other.bbox_right/2) &gt; bbox_left+bbox_right/2)
            imdead.hspeed = -0.5;
    }
    
    //Otherwise, move normally
    else    
        imdead.hspeed = 1*sign(other.hspeed);
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
