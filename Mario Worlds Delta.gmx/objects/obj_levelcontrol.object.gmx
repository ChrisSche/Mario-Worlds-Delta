<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_eventmarker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Level controller

/*
**  This item uses creation code!
**
**  levelmusic = The level music. (Any sound resource you load in, check up obj_persistent Game Start event for a list of songs that you can use.)
**  leveltime = The time limit in seconds. (Optional)
*/

//Default values
levelmusic = 0;
leveltime = 0;

//Play music
if (global.pswitch == 0)
&amp;&amp; (global.starman == 0)
    alarm[0] = 30;

//Is music disabled?
musicdisable = false;

//Is the P-Switch active?
switchon = 0;

//Camera variables
camera_y = 0;
camera_timer = 30;

//Barrier
barrier = 0;
alarm[5] = 3;

//Fade in / fade out
ready = 0;

//Object to follow
follow = noone;

//Background alpha values
background_alpha[0] = 1;
background_alpha[1] = 0;

//Background blend values
background_blend[0] = c_red;
background_blend[1] = c_red;

//Create HUD
instance_create(0, 0, obj_hud);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Warn the player that the P-Switch is running out of time

audio_play_sound(snd_switchtimer, 0, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End P-Switch sequence

//If the switch effect is on
if (switchon == true) {

    //Turn off the P-Switch
    switchon = false;
    
    //Replace items
    pswitch_off();
    
    //Stop switch song
    audio_stop_sound(bgm_pswitch);
    
    //Set invincibility theme
    if (instance_exists(obj_invincibility)) {
    
        //If the invincibility timer is greater than 0
        if (obj_invincibility.alarm[0] &gt; -1)
            with (obj_invincibility) alarm[2] = 2;
        
        //Otherwise, play default music
        else
            alarm[0] = 2;
    }
    
    //Otherwise, restart
    else
        alarm[0] = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enable barrier

barrier = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kill the player at 000 seconds left

instance_create(obj_playerparent.x, obj_playerparent.y, obj_player_dead);
with (obj_playerparent) instance_destroy();
exit;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play 'Hurry' sound

audio_play_sound(snd_hurry, 0, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Decrement the timer variable

//If there's time left
if (global.time &gt; 0) {

    //Decrement
    global.time--;
    
    //Decrement again after a second
    alarm[2] = 50;
    
    //If there's 101 seconds left, play 'Hurry' sound
    if (global.time == 101)
        alarm[3] = 50;
        
    //Otherwise, if there's 1 second left
    else if (global.time == 1)
        alarm[4] = 51;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop the music

audio_stop_sound(levelmusic);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Loop the music

//If not audio is playing and the music is not disabled and the pswitch theme is not playing
if (!audio_is_playing(levelmusic)) 
if (musicdisable == 0)
&amp;&amp; (switchon == 0)
    audio_play_sound(levelmusic, 1, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deals with music pitch

//Pause the music if 'Hurry' is being played
if (audio_is_playing(snd_hurry)) {

    //Pause 'levelmusic'
    if (audio_is_playing(levelmusic)) 
        audio_pause_sound(levelmusic);
    
    //Pause 'bgm_starman'
    else if (audio_is_playing(bgm_starman))
        audio_pause_sound(bgm_starman);
        
    //Pause 'bgm_pswitch
    else if (audio_is_playing(bgm_pswitch))
        audio_pause_sound(bgm_pswitch);
}

else {

    //Set pitch of music at 1.13
    if (global.time &gt; 0) 
    &amp;&amp; (global.time &lt; 101) {
        
        audio_sound_pitch(levelmusic, 1.13);
        audio_sound_pitch(bgm_starman, 1.13);
        audio_sound_pitch(bgm_pswitch, 1.13);
    }
    
    //Otherwise, set pitch to 1.0
    else {
    
        audio_sound_pitch(levelmusic, 1);
        audio_sound_pitch(bgm_starman, 1);
        audio_sound_pitch(bgm_pswitch, 1);
    }

    //Resume 'levelmusic' if paused
    if (audio_is_paused(levelmusic)) 
        audio_resume_sound(levelmusic);
    
    //Resume 'bgm_starman' if paused
    else if (audio_is_paused(bgm_starman))
        audio_resume_sound(bgm_starman);
        
    //Resume 'bgm_starman' if paused
    else if (audio_is_paused(bgm_pswitch))
        audio_resume_sound(bgm_pswitch);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deals with the background

if (ready == 0) {

    background_alpha[1] += 0.005;
    if (background_alpha[1] &gt; 0.3) {
    
        background_alpha[1] = 0.3;
        ready = 1;
    }
}
else if (ready == 1) {

    background_alpha[1] -= 0.005;
    if (background_alpha[1] &lt; 0) {
    
        background_alpha[1] = 0;
        ready = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deals with various game logic parameters

//Set up object to follow
event_user(15);

//If the barrier is not enabled
if (barrier == true) {

    //If the player exists
    if (instance_exists(obj_playerparent)) {
        
        //If the player is at the leftmost part of the view
        if (obj_playerparent.x &lt; view_xview[view_current]+8) {
        
            //If the cape object exists
            if (instance_exists(obj_cape_fly)) {
            
                obj_cape_fly.x = view_xview[view_current]+8;
                if (obj_cape_fly.hspeed &lt; 0)
                    obj_cape_fly.hspeed = 0;
            }
            
            //Prevent the player from getting outside the view
            obj_playerparent.x = view_xview[view_current]+8;
            if (obj_playerparent.hspeed &lt; 0)
                obj_playerparent.hspeed = 0;
        }
        
        //Otherwise, if the player is at the rightmost part of the view
        else if (obj_playerparent.x &gt; view_xview[view_current] + view_wview[view_current]-8) {
        
            //If the cape object exists
            if (instance_exists(obj_cape_fly)) {
            
                obj_cape_fly.x = view_xview[view_current] + view_wview[view_current]-8;
                if (obj_cape_fly.hspeed &gt; 0)
                    obj_cape_fly.hspeed = 0;                    
            }
            
            //Prevent the player from getting outside the view
            obj_playerparent.x = view_xview[view_current] + view_wview[view_current]-8;
            if (obj_playerparent.hspeed &gt; 0)
                obj_playerparent.hspeed = 0;    
        }
    }
}

//Manage camera y position if the main player object exists
if (instance_exists(obj_playerparent))
    event_user(3);
    
//Otherwise, reset camera position
else {
    
    //Reset timer
    camera_timer = 30;
    
    //Return camera position
    if (camera_y &gt; 0)
        camera_y -= 4;
    else if (camera_y &lt; 0)
        camera_y += 4;            
}

//Follow
if (follow != noone) {
    
    x = round(follow.x);
    y = round(follow.y + camera_y);
}

//Get 1-UP for each 100 coins
if (global.coins &gt; 99) {

    //Play '1UP' sound
    audio_play_sound(snd_1up, 0, false);    
    
    //Reset counter
    global.coins -= 100;
    
    //Get 1-UP
    lives++;
}

//Drop reserve item
if (instance_exists(obj_playerparent))
&amp;&amp; (barrier == 1)
&amp;&amp; (obj_playerparent.control_enable == true)
&amp;&amp; (keyboard_check_pressed(global.key_action[2]))
    event_user(1);

//Deactivate objects under the following parents
instance_deactivate_object(obj_deactenemyparent);
instance_deactivate_object(obj_deactivateparent);

//Activate things that are on screen
instance_activate_region(view_xview[view_current]-32, view_yview[view_current]-32, view_wview[view_current]+64, view_hview[view_current]+64, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up object to follow

//If the player does exist
if (instance_exists(obj_followme))
    follow = obj_followme;
    
//Otherwise, if the player exists and he just died
else 
    follow = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop all music and fanfares

//Stop music instance
audio_stop_sound(levelmusic);

//Prevent it from playing
musicdisable = 1;

//Stop starman theme
audio_stop_sound(bgm_star);

//Stop P-Switch music
audio_stop_sound(bgm_pswitch);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Adjust camera y position

//Make sure the player is not doing anything
if (obj_playerparent.state == statetype.idle) &amp;&amp; (!keyboard_check(global.key_action[1])) {
    
    //If the 'Up' key is pressed
    if (keyboard_check(global.key_u)) {
    
        camera_timer--;
        if (camera_timer &lt; 0) {
        
            camera_y -= 4;
            if (camera_y &lt; -64)
                camera_y = -64;
        }
    }
    
    //Otherwise, if the 'Down' key is pressed
    else if (keyboard_check(global.key_d)) {
    
        camera_timer--;
        if (camera_timer &lt; 0) {
        
            camera_y += 4;
            if (camera_y &gt; 64)
                camera_y = 64;
        }
    }
    
    //Otherwise, reset it
    else {
    
        //Reset timer
        camera_timer = 30;
        
        //Return camera position
        if (camera_y &gt; 0)
            camera_y -= 4;
        else if (camera_y &lt; 0)
            camera_y += 4;            
    }
}
else {

    //Reset timer
    camera_timer = 30;
    
    //Return camera position
    if (camera_y &gt; 0)
        camera_y -= 4;
    else if (camera_y &lt; 0)
        camera_y += 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Begin P-Switch events

//If the switch effect is off
if (switchon == false) {

    //Turn on the switch
    switchon = true;
    
    //Replace items
    pswitch_on();
}

//Stop music
alarm[1] = 1;

//Stop invincibility music
audio_stop_sound(bgm_starman);

//Play 'P-Switch' music
if (!audio_is_playing(bgm_pswitch))
    audio_play_sound(bgm_pswitch, 0, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Release reserve item

//If there's an item in the reserve item box
if (global.reserveitem != cs_pow_small) {

    //Create the reserve item
    with (instance_create(view_xview[0] + view_wview[0]/2, view_yview[0]+12, obj_reserveitem)) {
    
        //Mushroom
        if (global.reserveitem == cs_pow_super)
            sprite_index = spr_mushroom;
            
        //Fire Flower
        else if (global.reserveitem == cs_pow_fire)
            sprite_index = spr_fireflower;
            
        //Cape Feather
        else if (global.reserveitem == cs_pow_cape)
            sprite_index = spr_feather;
    }
    
    //Empty the box
    global.reserveitem = cs_pow_small;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy all player objects

with (obj_player_warp) instance_destroy();
with (obj_player_door) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles checkpoints, and other stuff

//If the music is not the same as the music used in the last room
if (global.levelmusic != levelmusic) {

    //Stop the old music
    audio_stop_sound(global.levelmusic);

    //Set the new music
    global.levelmusic = levelmusic;
}

//If the time is set to something, and was not set in a previous room, set it
if (leveltime &gt; 0) 
&amp;&amp; (global.time == 0) {

    global.time = leveltime;
    if (global.time &lt; 101)
        alarm[3] = 50;
}

//If the player just started the level
if (global.cpstart == 0) {

    //The level has started
    global.cpstart = 1;
    
    //If the checkpoint exists
    if (instance_exists(global.checkpoint)) {
    
        //Destroy player object
        event_user(0);
        
        //Create new player object
        player_create(global.checkpoint.x, global.checkpoint.y);
    }
}

//If the timer was set, begin ticking
if (global.time &gt; 0)
    alarm[2] = 60;
    
//If the player came from another room
if (global.postchange != -1) {

    //Destroy player objects
    event_user(0);
    
    //Create the appropiate object at the given position
    with (obj_warpnode) {
    
        if (global.exit_id == myid)
            event_user(0);
    }
    
    //Allow warp
    global.postchange = -1;
}

//If the player was riding a yoshi on the previous room
if (global.mount == 1) {

    //Create a ridden yoshi
    with (instance_create(x, y, obj_yoshi)) {
    
        state = yoshistate.ridden;
    }
}

//Otherwise, if the player carried an item from the previous room
else if (global.carrieditem != noone) {

    //If the item is a carryable item
    if (object_get_parent(global.carrieditem) == obj_holdparent) {
    
        //Create it
        with (instance_create(x, y, global.carrieditem)) {
        
            //Hold the item
            held = 1;
            
            //Set up the sprite
            if (global.carriedsprite != noone) {
            
                //Change the sprite
                sprite_index = global.carriedsprite;
                
                //Reset sprite
                global.carriedsprite = noone;    
            }
        }
        
        //If the player does exist on the room, force him to hold the item
        if (instance_exists(obj_playerparent))
            obj_playerparent.holding = 1;
    }
    
    //Reset the variable
    global.carrieditem = noone;
}

//If the P-Switch needs to carry over from the previous room
if (global.pswitch &gt; 0) {

    //Turn on the P-Switch
    event_user(2);

    //Set the timer, and make sure it is not too short
    alarm[6] = max(global.pswitch, 30);

    //Reset the variable
    global.pswitch = 0;

}

//If a star needs to carry over from the previous room
if (global.starman &gt; 0) {

    //With the newly created invincibility object, set its time limit, and make sure it is not too short
    with (instance_create(x, y, obj_invincibility)) {
    
        alarm[0] = max(global.starman, 30);
        alarm[3] = 1;
    }

    //Reset the variable
    global.starman = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deals with parallax backgrounds.

draw_background_tiled_horizontal_ext(background_index[0],view_xview[0]/2+(background_x[0]+background_hspeed[0]),background_y[0]+(view_yview[0]*(room_height-background_height[0])/(room_height-view_hview[0])),1,1,0,background_blend[0],background_alpha[0]);
draw_background_tiled_horizontal_ext(background_index[1],view_xview[0]/2+(background_x[1]+background_hspeed[1]),background_y[1]+(view_yview[0]*(room_height-background_height[1])/(room_height-view_hview[0])),1,1,0,background_blend[0],background_alpha[1]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
