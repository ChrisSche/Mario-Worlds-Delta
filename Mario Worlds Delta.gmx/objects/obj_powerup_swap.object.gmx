<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mushroom</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9</depth>
  <persistent>0</persistent>
  <parentName>obj_powerupparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///An item that changes of shape

//Animate the object
image_speed = 0;
image_index = 0;

//Change
alarm[0] = 90;

//Whether this object is outside the block
ready = 0;

//Move up
vspeed = -2;

//Call inherited event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change the sprite

switch (sprite_index) {

    //Mushroom -&gt; Fireflower
    case (spr_mushroom): { 
    
        sprite_index = spr_fireflower;
        image_speed = 0;
        image_index = 0;
        break;
    }
    
    //Fireflower -&gt; Leaf
    case (spr_fireflower): {
    
        sprite_index = spr_feather;
        image_speed = 0;
        image_index = 0;
        break;
    }
    
    //Leaf -&gt; Starman
    case (spr_feather): {
    
        sprite_index = spr_star;
        image_speed = 0.5;
        break;
    } break;
    
    //Starman -&gt; Mushroom
    case (spr_star): {
    
        sprite_index = spr_mushroom;
        image_speed = 0;
        break;
    } break;
}

//Repeat the process.
alarm[0] = 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Roulette item logic

if (ready == 0) {

    gravity = 0;
    if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_solid,0,0)) {
        
        //Out of the block.
        ready = true;
        
        //Set depth
        depth = -2;
        
        //Set horizontal speed.
        hspeed = 0.5;
        
        //If the item is underwater, make it swim
        if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_swim, 0, 0)) {
        
            vspeed = -2;
            swimming = true;
        }
        else
            vspeed = -4;
    }
}

//Otherwise, if there's not a block in position.
else {

    //Inherit default event
    event_inherited();
    
    //Bounce
    if (gravity == 0) {

        //If the item is underwater
        if (swimming == false)
            vspeed = -4;
        
        //Otherwise, make a little bounce
        else
            vspeed = -2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get the item shown

//If the item is not overlapping a solid.
if (ready == true) {

    //Check the sprite
    switch (sprite_index) {
    
        //Mushroom
        case (spr_mushroom): {
        
            instance_create(x, y, obj_mushroom);
            instance_destroy();
        } break;
        
        //Fireflower
        case (spr_fireflower): {
        
            instance_create(x, y, obj_fireflower);
            instance_destroy();
        } break;
        
        //Feather
        case (spr_feather): {
        
            instance_create(x, y, obj_feather);
            instance_destroy();
        } break;
    
        //Starman
        case (spr_star): {
                            
            instance_create(x, y, obj_star);
            instance_destroy();
        } break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
