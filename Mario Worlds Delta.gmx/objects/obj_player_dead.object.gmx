<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_dead</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///An heroic death

//Set up sprite based on player
switch (global.player) {

    //Luigi
    case (1): sprite_index = spr_luigi_dead; break;
    
    //Toad
    case (2): sprite_index = spr_toad_dead; break;
}

//Play 'Player Down' sound
audio_play_sound(bgm_death, 0, false);

//Stop rest of music
audio_stop_sound(bgm_starman);
audio_stop_sound(bgm_pswitch);

//Do not animate
image_speed = 0;
image_index = 0;

//Subtract a life
lives--;

//Back
back = -1;

//Reset powerup
global.powerup = cs_pow_small;

//Stop both music and timer
with (obj_levelcontrol) {

    musicdisable = true;
    alarm[1] = 1;
    alarm[2] = -1;
    alarm[3] = -1;
    alarm[4] = -1;
}

//Destroy Yoshi
with (obj_yoshi) {

    global.mount = 0;
    if (state == yoshistate.ridden)
        instance_destroy();
}

//Make following objects invisible
with (obj_water) visible = 0;
with (obj_water_tides) visible = 0;
with (obj_effectsparent) visible = 0;

//Freeze everything on screen
alarm[0] = 2;

//Move up if not outside the view
alarm[1] = 62;

//Return to retry screen
alarm[2] = 202;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to the level start screen

//If there's lives left
if (lives &gt; 0) {

    //Set target room
    if (global.targetroom == noone) {
    
        global.targetroom = rm_engine;
    }
    
    //Go to the destination room
    room_goto(rm_levelstart);
}

//Otherwise, restart game
else
    room_goto(rm_gameover);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move up if inside the view

image_speed = 0.2;
if (y &lt; view_yview[0] + global.gh) {

    vspeed = -6;
    gravity = 0.2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Freeze all object and begin animation

//Create a screenshot
back = background_create_from_surface(application_surface, 0, 0, global.gw*2, global.gh*2, 0, 0);

//Deactivate all instances
instance_deactivate_all(1);

//Activate HUD
instance_activate_object(obj_hud);

//Activate water tides
instance_activate_object(obj_water);
with (obj_water) visible = 1;

//Activate water tides
instance_activate_object(obj_water_tides);
with (obj_water_tides) visible = 1;

//Activate effects
instance_activate_object(obj_effectsparent);
with (obj_effectsparent) visible = 1;

//Activate rain object
instance_activate_object(obj_rainmaker);
with (obj_rainmaker) event_user(0);

//Activate controller object
instance_activate_object(obj_controller);

//Deactivate particles
with (obj_rainmaker) event_user(0);

//Make the object visible
visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cap vertical speed

if (vspeed &gt; 4) {

    vspeed = 4;
    gravity = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the player

//If the animation has been set.
if (background_exists(back)) {

    //Disable alpha blending.
    draw_enable_alphablend(0);
    
    //Draw the screenshot
    draw_background(back, view_xview[0], view_yview[0]);
    
    //Enable alpha blending.
    draw_enable_alphablend(1);
}

//Draw the player
draw_sprite_ext(sprite_index, -1, round(x), round(y), 1, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
