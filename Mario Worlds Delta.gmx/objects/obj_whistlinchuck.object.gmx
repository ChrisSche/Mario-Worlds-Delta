<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_whistlinchuck</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_charginchuck</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Whistlin' Chuck

//Inherit event from chuck
event_inherited();

//Deny alarm 0
alarm[0] = -1;

//Deny alarm 10
alarm[10] = -1;

//Do not animate
image_speed = 0;
image_index = 0;

//Whether this enemy is whistlin'
ready = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Whistle again

//If the chuck is damaged
if (sprite_index == spr_charginchuck_damage)
exit;

//Play 'Chuck Whistle' sound
audio_stop_play_sound(snd_chuck_whistle, 0, false);

//Wake up all nearby enemies
global.whistle = 1;

//Repeat
alarm[0] = 90;

//Spawn in a super koopa
if (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_swim, 0, 0)) {

    //Choose a side to spawn from
    var spawn_x = choose(view_xview[view_current]-16, view_xview[view_current]+view_wview[view_current]+16);
    
    //Choose a random Y position to spawn in at
    var spawn_y = irandom_range(view_yview[view_current]+16, view_yview[view_current]+view_hview[view_current]-96);
    
    //Create the koopa
    instance_create(spawn_x, spawn_y, obj_superkoopa_green);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up animation speed

//Animate if damaged
if (sprite_index == spr_charginchuck_damage)
    image_speed = 0.2;
else {

    if (ready == 1)
        image_speed = 0.125;
    else
        image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Whistlin' Chuck logic

//Floor collision
event_user(4);

//Look towards the player
event_user(8);

//If the player exists
if (instance_exists(obj_playerparent)) {

    //If not whistling
    if (ready == 0) {
    
        //If the player is within the range
        if (swimming == true)
        &amp;&amp; (obj_playerparent.x &gt; bbox_left-32)
        &amp;&amp; (obj_playerparent.x &lt; bbox_right+32) {
        
            //Start whistling
            audio_stop_play_sound(snd_chuck_whistle, 0, false);
            
            //Wake up all nearby enemies
            global.whistle = 1;
            
            //Repeat every 1.5 seconds
            alarm[0] = 90;
            
            //Start whistling
            ready = 1;
            
            //Set the sprite
            sprite_index = spr_whistlinchuck;
            
            //Spawn in a super koopa
            if (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_swim, 0, 0)) {
            
                //Choose a side to spawn from
                var spawn_x = choose(view_xview[view_current]-16,view_xview[view_current]+view_wview[view_current]+16);
                
                //Choose a random Y position to spawn in at
                var spawn_y = irandom_range(view_yview[view_current]+16,view_yview[view_current]+view_hview[view_current]-96);
                
                //Create the koopa
                instance_create(spawn_x,spawn_y,obj_superkoopa_green);
            
            }
            
        }
    }
}

//Check for a water object
var water = collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_swim, 0, 0);

//If the object is not underwater and makes contact with water
if (water) 
&amp;&amp; (!swimming) {

    //Make the object go underwater
    swimming = true;
    
    //Stop vertical movement
    gravity = 0;
    if (vspeed &gt; 0)
        vspeed = 0;
}

//Otherwise, if the object is underwater and it's not underwater, end swimming.
else if (!water) 
&amp;&amp; (swimming)
    swimming = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update animation

//If charging, reset up animation
if (sprite_index == spr_whistlinchuck)
    image_index = 1;

//Otherwise, if damaged...
else if (sprite_index == spr_charginchuck_damage) {

    //Return to normal
    sprite_index = spr_whistlinchuck;

    //Whistle
    ready = 1;
    
    //Start whistling again
    alarm[0] = 90;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
