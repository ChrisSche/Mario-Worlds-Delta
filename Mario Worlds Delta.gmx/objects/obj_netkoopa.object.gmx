<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_netkoopa</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Net Koopa

//Inherit event
event_inherited();

//How vulnerable is this enemy to items
vulnerable = 0;

//How vulnerable is this enemy to the player
stomp = 0;

//How vulnerable is this enemy to Yoshi
edible = 0;

//Scale
xscale = 1;

//Allow to turn around
turnaround = 0;

//Animate
image_speed = 0.15;

//Set starting direction
if (place_snapped(32, 32))
    ready = 0;
else if (place_snapped(32, 16))
    ready = 1;
else if (place_snapped(16, 32))
    ready = 2;
else
    ready = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Can turn again

turnaround = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the depth and vulnerability

switch (depth) {

    //If behind a fence, turn vulnerable
    case (11): {
    
        //Set the sprite
        sprite_index = spr_netkoopa
    
        //Set vulnerability
        vulnerable = 0;
        
        //Set stomp grade
        stomp = 0;
        
        //Set depth
        depth = -1;
    } break;
    
    //Otherwise if it's on front of a fence, turn invulnerable
    case (-1): {
    
        //Set the sprite
        sprite_index = spr_netkoopa_b;
    
        //Set vulnerability
        vulnerable = 100;
        
        //Set stomp grade
        stomp = -1;
        
        //Set depth
        depth = 11;
    } break;
}

//Animate
image_speed = 0.15;

//Choose new direction
switch (ready) {

    //Down
    case (2): {
    
        ready = 0;
        vspeed = 0.5;
    } break;
    
    //Right
    case (3): {
    
        ready = 1;
        hspeed = 0.5;
    } break;
    
    //Up
    case (0): {
    
        ready = 2;
        vspeed = -0.5;
    } break;
    
    //Left
    case (1): {
    
        ready = 3;
        hspeed = -0.5;
    } break;
}

//Can turn again
alarm[1] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Net koopa logic

//If the koopa is not turning and climbs off the net
if (turnaround = 0) {

    ///If moving down
    if (vspeed &gt; 0) 
    &amp;&amp; (!place_meeting(x, y+15, obj_climb_net)) {
    
        vspeed = -vspeed;
        if (ready != 2)
            ready = 2;
    }
    
    //Otherwise
    else if (!place_meeting(x, y, obj_climb_net)) {
    
        //Turn sprite
        sprite_index = spr_netkoopa_turn;
        
        //Turning
        turnaround = 1;
    
        //Do not animate
        image_speed = 0;
    
        //Stop
        speed = 0;
    
        //Finish turning
        alarm[0] = 10;
    
        //Turn image index
        if ((ready == 0) || (ready == 3))
            image_index = 0;
        else
            image_index = 1;
    }
}

//Wall collision
event_user(3);

//Set default death sprite
deathsprite = sprite_index;

//Set default stomp sprite
stompsprite = sprite_index;

//If moving up and there's a ceiling in place
if (vspeed &lt; 0) {

    if (collision_rectangle(bbox_left, bbox_top-1, bbox_right, bbox_top, obj_solid, 0, 0))
    || (collision_rectangle(bbox_left, bbox_top-1, bbox_right, bbox_top, obj_slopeparent_ceiling, 1, 0)) {
    
        //Prevent getting embed on ceiling
        while (collision_rectangle(bbox_left, bbox_top-1, bbox_right, bbox_top, obj_solid, 0, 0))
            y++;
            
        //Reverse vertical movement
        vspeed = -vspeed;
    }
}

//Otherwise,  if moving down and there's a semisolid in place
else if (vspeed &gt; 0)  
&amp;&amp; (collision_rectangle(bbox_left, bbox_bottom, bbox_right, bbox_bottom, obj_semisolid, 0, 0))
    vspeed = -vspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with the player

//If the player is climbing and is smacking the fence
if ((other.state == statetype.climb) &amp;&amp; (other.netsmack &gt; -1)) {

    //If the koopa is behind the fence
    if (depth == 11) {

        //Play 'Kick' sound
        audio_play_sound(snd_kick, 0, false);
        
        //Get 400 points
        with (instance_create(x+8, y, obj_score)) event_user(3);
        
        //Create spin thump
        with (instance_create(x+8, y, obj_smoke)) sprite_index = spr_spinthump;

        //Create dead enemy object
        imdead = instance_create(x, y, obj_enemy_dead);
        
        //Set up the sprite
        imdead.sprite_index = deathsprite;
        
        //Set up the xscale
        imdead.image_xscale = 1;
        
        //Set the vertical speed
        imdead.vspeed = -5;
        
        //Set the depth
        imdead.depth = depth;
        
        //Destroy
        instance_destroy();           
        
        //If the killer object is at the left of this object, move to the right
        if ((other.bbox_left+other.bbox_right/2) &lt; bbox_left+bbox_right/2)
            imdead.hspeed = 0.5;
        else
            imdead.hspeed = -0.5;
    }
}

//Inherit event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom wall collision

//Inherit event
event_inherited();

//If moving right
if (hspeed &gt; 0)
    ready = 1;
else if (hspeed &lt; 0)
    ready = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom stomp event

with (instance_create(x, y, obj_enemy_stomped)) {

    //Set the sprite
    sprite_index = other.stompsprite;
    
    //Set the facing direction
    image_xscale = other.xscale;
    
    //Set the depth
    depth = other.depth;
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom death event

//Inherit event
event_inherited();

//Set depth
imdead.depth = depth;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start moving

switch (ready) {

    case (0): vspeed = 0.5; break;
    case (1): hspeed = 0.5; break;
    case (2): vspeed = -0.5; break;
    case (3): hspeed = -0.5; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

draw_sprite_ext(sprite_index, image_index, round(x), round(y), 1, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
