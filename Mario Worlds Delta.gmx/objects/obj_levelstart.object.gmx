<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_eventmarker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Starts the level

//Inherit event
anim = 0;

//Go to the level
alarm[0] = 180;

//Reset global variables
variable_global_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to the current level

//If a checkpoint has been touched, go to the given checkpoint
if (global.checkpoint != noone)
    room_goto(global.checkpointroom);
    
//Otherwise, go to the level
else
    room_goto(global.targetroom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Force level start

if (keyboard_check_released(global.key_action[0]))
    alarm[0] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the HUD and current character

//Set font
draw_set_font(global.font);

//Set colour
draw_set_colour(c_white);

//Update
anim += 0.075;

//Set up palette
player_set_palette(id);

//Draw the cape
if (global.powerup == cs_pow_cape)
|| (global.powerup == cs_pow_firecape) {

    draw_sprite(spr_cape_walk, anim*2, view_xview[view_current] + (view_wview[view_current] / 2) - 24, view_yview[view_current] + (view_hview[view_current] / 2) - 24);
}

//Draw the player
draw_sprite(player_walk(), anim, view_xview[view_current] + (view_wview[view_current] / 2) - 24, view_yview[view_current] + (view_hview[view_current] / 2) - 24);

//Reset palette
pal_swap_reset();

//Align the font
draw_set_halign(fa_center);

//Draw it
draw_text(view_xview[view_current] + (view_wview[view_current] / 2) + 12, view_yview[view_current] + (view_hview[view_current] / 2) - 16, "*  " + string_format(lives, 2, 0));

//Reset align
draw_set_halign(fa_left);

//Draw 'Mario Start!' text
draw_sprite(spr_mariostart, global.player, view_xview[view_current] + view_wview[view_current] / 2, view_yview[view_current] + (view_hview[view_current] / 2) + 8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
