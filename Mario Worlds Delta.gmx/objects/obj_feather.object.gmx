<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_feather</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_powerupparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Feather

//Inherit event from parent
event_inherited();

//Do not animate
image_speed = 0;
image_index = 0;

//Powerup
powerup = cs_pow_cape;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_spinner">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn into a falling feather

//If moving down
if (vspeed &gt;= 0) {

    //Create a real feather
    instance_create(x, y, obj_feather_sprout);
    
    //Destroy
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn into a falling feather

//If the block is moving up
if (other.vspeed &lt; 0)
&amp;&amp; (vspeed &gt;= 0)
&amp;&amp; (y &lt; other.bbox_top-11) {

    //Create a real feather
    instance_create(x, y, obj_feather_sprout);
    
    //Destroy
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn into 'Cape' or 'Fire Cape'

//Get 1000 points
with (instance_create(x-8, y, obj_score)) event_user(5);

//Turn into cape
if (global.powerup != cs_pow_fire) 
&amp;&amp; (global.powerup != cs_pow_cape) 
&amp;&amp; (global.powerup != cs_pow_firecape) {

    //Play 'Feather' sound
    audio_play_sound(snd_feather, 0, false);
    
    //If the previous powerup was a mushroom
    if (global.powerup == cs_pow_super) 
    &amp;&amp; (global.reserveitem == cs_pow_small) {
    
        //Hold a mushroom in reserve
        global.reserveitem = cs_pow_super;
    }
    
    //Perform animation sequence
    _transform = instance_create(0, 0, obj_player_transform);
        _transform.oldpowerup = global.powerup;
        _transform.newpowerup = powerup;    
}

//Otherwise, perform various actions
else {

    //If the player has already the fire flower
    if (global.powerup == cs_pow_fire) {
    
        //Play 'Feather' sound
        audio_play_sound(snd_feather, 0, false);
    
        //Perform animation sequence
        _transform = instance_create(0, 0, obj_player_transform);
            _transform.oldpowerup = global.powerup;
            _transform.newpowerup = 4;           
    }
    
    //Otherwise, if the player has already fire or fire cape...
    else if (global.powerup == cs_pow_cape) || (global.powerup == cs_pow_firecape) {
    
        //Play 'Reserve' sound
        audio_play_sound(snd_reserve, 0, false);
    
        //Hold a fire flower in reserve
        if (global.reserveitem != cs_pow_cape)
            global.reserveitem = cs_pow_cape;
    }
}

//Destroy
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Feather

draw_sprite_ext(sprite_index, -1, round(x), round(y)+1, 1, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
