<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_killparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The power of invincibility.

//Prepare to end invincibility
alarm[0] = 960;

//Play the starman theme if it's not playing.
alarm[2] = 1;

//Create sparkles
alarm[3] = 1;

//Combo
hitcombo = 0;

//Warn the player
warning = 0;

//Object to follow
follow = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create sparkles

//If the player does exist.
if (instance_exists(obj_playerparent)) {

    //If the player is small or is crouched down.
    if (mask_index == spr_mask_player)
        instance_create(x-8+random(round(16)), y+random_range(0,16), obj_sparkle);
    
    //Otherwise 
    else if (mask_index == spr_mask_player_big)
        instance_create(x-8+random(round(16)), y+random_range(-6,16), obj_sparkle);
}

//Otherwise
else {

    //Set object to check
    event_user(15);
    
    //If the player is small
    if (global.powerup == cs_pow_small) {
    
        spark = instance_create(x-8+random(round(16)), y+random_range(0,16), obj_sparkle);
        spark.depth = follow.depth-1;
    }
    
    //Otherwise 
    else if (mask_index == spr_mask_player_big) {
    
        spark = instance_create(x-8+random(round(16)), y+random_range(-6,16), obj_sparkle);
        spark.depth = follow.depth-1;
    }
}

//Repeat
if (obj_invincibility.alarm[0] &gt; 120)
    alarm[3] = 2;
else
    alarm[3] = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play invincibility music

//End level music and reset global.music
obj_levelcontrol.alarm[1] = 1;

//Play 'Starman' theme
if (!audio_is_playing(bgm_pswitch))
&amp;&amp; (!audio_is_playing(bgm_starman))
    audio_play_sound(bgm_starman, 0, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy

//Make Mario vulnerable to all attacks.
if (instance_exists(obj_playerparent)) {

    obj_playerparent.invulnerable = false;
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End invincibility

//Stop starman music
audio_stop_sound(bgm_starman);

//Play level music
obj_levelcontrol.alarm[0] = 2;

//Destroy
alarm[1] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Invincibility logic.

//If the player dies, destroy
if (instance_exists(obj_player_dead)) {

    instance_destroy();
    exit;
}

//If the player does exist.
if (instance_exists(obj_playerparent)) {

    //Snap into the player position.
    x = obj_playerparent.x;
    y = obj_playerparent.y;
    
    //Make the player invulnerable.
    with (obj_playerparent) {
    
        //Keep invulnerability
        invulnerable = true
        alarm[0] = -1;
        alarm[1] = -1;
        
        //Leave a trail behind the player
        with (instance_create(x, y, obj_player_trail)) {
        
            sprite_index = obj_playerparent.sprite_index;
            image_single = obj_playerparent.image_index;
            image_xscale = obj_playerparent.xscale;
            pal = obj_playerparent.isflashing;
        }        
    }
    
    //Get the mask from the player
    mask_index = obj_playerparent.mask_index;
}

else {

    //Set object to follow
    event_user(15);
    
    //Snap into the following object position.
    x = follow.x;
    y = follow.y;    
}

//Warn the player that the starman effect is running out
if ((warning == 0) &amp;&amp; (alarm[0] &lt;= 120)) {

    //Play 'Switch Timer' sound
    audio_play_sound(snd_switchtimer, 0, false);
    
    //Warn
    warning = 1;
}
else if ((warning == 1) &amp;&amp; (alarm[0] &gt; 120)) 
    warning = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check what item is present

//Check 'Warp'
if (instance_exists(obj_player_warp))
    follow = obj_player_warp;
    
//Check 'Door'
else if (instance_exists(obj_player_door))
    follow = obj_player_door;
    
//Reset to default
else
    follow = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remember the star for the next room

//If the effect is still present
if alarm[0] &gt; 5
    global.starman = alarm[0];

//Stop the star if there is not enough time left
else
    audio_stop_sound(bgm_star);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
