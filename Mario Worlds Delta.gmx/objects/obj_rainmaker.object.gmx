<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_eventmarker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rain generator

/*
//  This object uses creation code
//
//      lightning   = Create lightning effect?
//      smog        = Show smog? (1 for clouds, 2 for smog)
//      raining     = Make rain? Used for when you only want smog/lightning
//      force       = Rain strength (Only if raining is set to 1)
*/

//Default values
lightning = 1;
smog = 0;
force = 5;
raining = true;

//Smog pos
pos = 0;

//Alpha
alpha = 1;

//Create lightning
alarm[0] = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lightning strike

//Generate
alarm[0] = 100+random(round(200));

//If this object can generate lightning
if (lightning == 1)
&amp;&amp; (!instance_exists(obj_player_dead))
    instance_create(0, 0, obj_lightningsheet);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate rain drops

if (raining == true) 
&amp;&amp; (!instance_exists(obj_player_dead)) {

    repeat (force) {
        
        with (instance_create(random_range(view_xview[view_current]-global.gw, view_xview[view_current] + view_wview[view_current]+global.gw), view_yview[view_current]-5, obj_rain))
            depth = round(random_range(-6,9));
    }
}

//Update smog position
pos -= 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw clouds or smog if required

//Clouds
if (smog == 1)
    draw_background_tiled_horizontal_ext(fgr_clouds, round(view_xview[0]/2+pos*2), view_yview[0], 1, 1, 0, c_white, alpha/4);

//Smog
else if (smog == 2) {

    //Set blending mode
    draw_set_blend_mode(bm_add);
    
    //Draw the background
    if (background_get_height(fgr_smog) &lt; room_height)
    &amp;&amp; (background_get_height(fgr_smog) &gt; view_hview[0])
        draw_background_tiled_horizontal_ext(fgr_smog, round(view_xview[0]/2+pos), y+view_yview[0]*(room_height-background_height[0])/(room_height-view_hview[0]), 1, 1, 0, c_white, alpha);
    else
        draw_background_tiled_horizontal_ext(fgr_smog, round(view_xview[0]/2+pos), y, 1, 1, 0, c_white, alpha);
        
    //Set blending mode to normal
    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
