<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_letterfish</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_cheepcheep_v</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vertical Letterfish

//Inherit event
event_inherited();

//How vulnerable is this enemy to various items?
vulnerable = 0;

//How vulnerable is this enemy to the player?
stomp = 2;

//How vulnerable is this enemy to yoshi?
edible = 0;

//Facing direction
xscale = 1;

//Animate
image_speed = 0.125;

//Sets turning endpoint
prevswim = 0;
yy = y;

//Death Sprite
deathsprite = spr_letterfish_dead;

//Flopping facing direction
flopdir = 1;

//Start moving or flop
if (collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top, obj_swim, 0, 0))
    alarm[10] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vertical Letterfish logic

//Inherit default event
event_perform_object(obj_physicsparent, ev_step, ev_step_normal);

//If not flopping
if (swimming == 1) {

    //If the turning endpoint has not been set
    if (prevswim == 0) {
    
        vspeed = 0.5*sign(xscale);
        hspeed = 0;
        prevswim = 1;
        yy = y;
    }

    //Set the sprite
    sprite_index = spr_letterfish;
    
    //Animate
    image_speed = 0.125;
    
    //Do not apply gravity
    gravity = 0;
    
    //If the cheep cheep is moving to the right.
    if (vspeed &gt; 0) {
        
        //Change direction
        if (y &gt; yy+32)
            vspeed = -vspeed;
            
        //Otherwise
        else if ((collision_rectangle(bbox_left, bbox_bottom, bbox_right, bbox_bottom+1, obj_semisolid, 0, 0))
             || (collision_rectangle(bbox_left, bbox_bottom, bbox_right, bbox_bottom+1, obj_slopeparent, 1, 0)))
                vspeed = -vspeed;
    }
    
    //Otherwise, if the cheep cheep is moving to the left.
    else if (vspeed &lt; 0) {
            
        //Change direction.
        if (y &lt; yy-32)
        || (!collision_line(bbox_left, bbox_top, bbox_right, bbox_top, obj_swim, 0, 0))    
            vspeed = -vspeed;
    }
    
    //Face towards the player
    if (!instance_exists(obj_playerparent))
    || (obj_playerparent.x &lt; x)
        xscale = -1;
    else
        xscale = 1;
}

//Otherwise, if flopping
else if (swimming == 0) {

    //Reset turning endpoint
    prevswim = 0;

    //Set the flopping sprite
    sprite_index = spr_letterfish_flop;
    
    //Do not animate
    image_speed = 0;
    
    //If no gravity
    if (gravity == 0) {
    
        //Change frame
        image_index = !image_index;
    
        //Choose flop
        flopdir = choose(1, -1);
        
        //Set horizontal speed
        hspeed = 1*sign(flopdir);
        
        //Create splash effect
        with (instance_create(x, y+8, obj_smoke)) {
        
            sprite_index = spr_smoke_16;
            image_speed = 0.15;
            image_index = 2;
            gravity = 0.25;
        }
        
        //Set the vertical speed
        vspeed = -2;
    }
    
    //Set facing direction
    xscale = flopdir;    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
