<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cape</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cape

//Do not animate
image_speed = 0;
image_index = 0;

//Cape state
enum capestate {

    cape_idle,
    cape_walk,
    cape_jump_up,
    cape_jump_down,
    cape_spin_up,
    cape_spin_down,
    cape_climb
}
state = capestate.cape_idle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update cape sprite and position

//Cape - Idle
if (state == capestate.cape_idle) {

    //If the following cape sprites are not used
    if (sprite_index != spr_cape)
    &amp;&amp; (sprite_index != spr_cape_down) {
    
        //Set up the sprite
        sprite_index = spr_cape_down;
        
        //Animate
        image_speed = 0.15;
        image_index = 0;
    }
}

//Cape - Walk
else if (state == capestate.cape_walk) {

    //If the following cape sprites are not used
    if (sprite_index != spr_cape_up)
    &amp;&amp; (sprite_index != spr_cape_walk) {
    
        //Set up the sprite
        sprite_index = spr_cape_up;
        
        //Animate
        image_speed = 0.15;
        image_index = 0;
    }
    
    //If the following cape sprite is being used, update based on hspeed
    if (sprite_index == spr_cape_walk)
        image_speed = (0.065*(obj_playerparent.inice*4))+abs(obj_playerparent.hspeed)/7.5;
}

//Cape - Jump Up
else if (state == capestate.cape_jump_up) {

    //If the following cape sprite are not used
    if (sprite_index != spr_cape)
    &amp;&amp; (sprite_index != spr_cape_down) {
    
        //Set up the sprite
        sprite_index = spr_cape_down;
        
        //Animate
        image_speed = 0.15;
        image_index = 0;
    }
}

//Cape - Jump Down
else if (state == capestate.cape_jump_down) {

    //If the following cape sprite are not used
    if (sprite_index != spr_cape_up)
    &amp;&amp; (sprite_index != spr_cape_fall) {
    
        //Set up the sprite
        sprite_index = spr_cape_up;
        
        //Animate
        image_speed = 0.15;
        image_index = 0;
    }
}

//Cape - Spin Up
else if (state == capestate.cape_spin_up) {

    //Set up the sprite
    sprite_index = spr_cape_spin;
    
    //Animate
    image_speed = 0.5;
}

//Cape - Spin Down
else if (state == capestate.cape_spin_down) {

    //Set up the sprite
    sprite_index = spr_cape_spin_fall;
    
    //Animate
    image_speed = 0.5;
}

//Cape - Climb
else if (state == capestate.cape_climb) {

    //Set up the sprite
    sprite_index = spr_cape_climb;
    
    //Do not animate
    image_speed = 0;
    image_index = 0;
}

//Move towards the player
x = obj_playerparent.x;
y = obj_playerparent.y;

//Hereby facing direction
image_xscale = obj_playerparent.xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End animation

//If the cape is moving up
if (sprite_index == spr_cape_up) {

    //If the state is cape_walk
    if (state == capestate.cape_walk) {
    
        //Set the sprite
        sprite_index = spr_cape_walk;
        
        //Animate
        image_speed = 0.1;
    }
    
    //Otherwise, if the state is cape_jump_down
    else if (state == capestate.cape_jump_down) {
    
        //Set the sprite
        sprite_index = spr_cape_fall;
        
        //Animate
        image_speed = 0.2;    
    }
}

//Otherwise, if the cape is moving down
else if (sprite_index == spr_cape_down) {

    //Set the sprite
    sprite_index = spr_cape;
    
    //Do not animate
    image_speed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the cape

draw_sprite_ext(sprite_index, -1, round(x), round(y)+1, image_xscale, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
