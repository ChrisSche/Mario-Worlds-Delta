<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_big</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_playerparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///It's Mario, right on your face!

//Inherit event from obj_playerparent
event_inherited();

//Jump Strength
jumpstrength = 3.4675;
jumpstrength_spin = 3.23375;

//Acceleration
acc = 0.06;

//Acceleration (when turning)
acc_turn = 0.15;

//Deceleration
dec = 0.0375;

//Gravity
grav = 0.3625;

//Gravity (when jumping)
grav_alt = 0.0625;

//In water acceleration
acc_swim = 0.025;

//In water acceleration (when turning)
acc_turn_swim = 0.05;

//In water deceleration
dec_swim = 0.007;

//Gravity (Underwater)
grav_swim = 0.03;

//Minimum horizontal speed
hspeed_walk = 1.3;

//Maximum horizontal speed
hspeed_run = 2.7;

//Maximum horizontal speed (Full Meter)
hspeed_run_full = 3.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage Mario's animation

//Check if Mario is on a slippery surface
if (collision_rectangle(bbox_left, bbox_bottom-1, bbox_right, bbox_bottom, obj_iceparent, 1, 0))
    inice = true;
else
    inice = false;

//If Mario is crouched down
if (crouch == true) {

    //Set up the crouch sprite
    sprite_index = player_crouch();
    
    //Do not animate
    image_speed = 0;
    
    //If Mario is not holding anything
    if (holding == 0)
        image_index = 0;
    
    //Otherwise, if Mario is holding something
    else {
    
        //You can set up multiple holding states if you want
        if (holding == 1)
            image_index = 1;
    }
    
    //Cancel turning
    turnnow = 0;
    
    //Set up the mask
    mask_index = spr_mask_player;
    
    //Stop 'Skid' sound
    /*if (audio_is_playing(snd_skid))
        audio_stop_sound(snd_skid);*/
}

//Otherwise, if Mario is not longer crouched down
else if (crouch == false) {

    //If Mario is not holding anything
    if (holding == 0) {
    
        //If Mario is not sliding down a slope
        if (sliding == false) {
        
            //If Mario is not kicking anything
            if (kicking == false) {
            
                //If Mario is not moving
                if (state == statetype.idle) {
                
                    //If Mario is firing up a projectile
                    if (firing &gt; 0)
                    &amp;&amp; (global.powerup == cs_pow_fire) {
                    
                        //Set the sprite
                        sprite_index = player_shoot();
                        
                        //Do not animate
                        image_speed = 0;
                        image_index = 0;
                        
                        //Decrement firing
                        firing--;
                    }
                    
                    //Otherwise, if Mario is not firing up a projectile
                    else {
                    
                        //Set the sprite
                        sprite_index = player_idle();
                        
                        //Do not animate
                        image_speed = 0;
                        
                        //But set the appropiate frame
                        if (keyboard_check(global.key_u))
                            image_index = 1;
                        else
                            image_index = 0;
                    }
                }
                
                //Otherwise, if Mario is walking
                else if (state == statetype.walk) {
                
                    //Before setting the walk sprite, check if Mario is moving in the opposite direction
                    if (((hspeed &gt; 0.1) &amp;&amp; (xscale == -1)) || ((hspeed &lt; -0.1) &amp;&amp; (xscale == 1)))
                    &amp;&amp; (swimming == false)
                    &amp;&amp; (!inice) {
                    
                        //Set the sprite
                        sprite_index = player_skid();
                        
                        //Do not animate
                        image_speed = 0;
                        image_index = 0;
                        
                        //Play 'Skid' sound
                        //if (!audio_is_playing(snd_skid))
                            //audio_play_sound(snd_skid, 0, true);                    
                    }
                    
                    //Otherwise
                    else {
                        
                        //Animate
                        image_speed = (0.065*(inice*4))+abs(hspeed)/7.5;
                        
                        //Set up the sprite
                        if (run == true)
                            sprite_index = player_run();
                        else
                            sprite_index = player_walk();
                    }
                }
                
                //Otherwise, if Mario is jumping
                else if (state == statetype.jump) {
                
                    //If Mario is not swimming
                    if (swimming == false) {
                    
                        //If Mario is doing a spinjump
                        if (jumpstyle == true) {
                        
                            //Set the sprite
                            sprite_index = player_spin();
                            
                            //Animate
                            image_speed = 0.5;
                        }
                        
                        //Otherwise, if Mario is not doing a spinjump
                        else if (jumpstyle == false) {
                        
                            //If Mario is running
                            if (run == true) {
                            
                                //Set the sprite
                                sprite_index = player_runjump();
                                
                                //Do not animate
                                image_speed = 0;
                                image_index = 0;
                            }
                            
                            //Otherwise, if Mario is not running
                            else if (run == false) {
                            
                                //Set the sprite
                                sprite_index = player_jump();
                                
                                //Do not animate
                                image_speed = 0;
                                
                                //But set the appropiate frame
                                if (vspeed &lt; 0)
                                    image_index = 0;
                                else
                                    image_index = 1;
                            }
                        }
                    }
                    
                    //Otherwise, if Mario is swimming
                    else if (swimming == true) {
                    
                        //Set the sprite
                        sprite_index = player_swim();
                        
                        //If moving up, animate
                        if (vspeed &lt; 0)
                            image_speed = 0.15;
                            
                        //Otherwise, do not animate
                        else {
                        
                            image_speed = 0;
                            image_index = 0;
                        }
                    }
                }
                
                //Otherwise, if Mario is climbing
                else if (state == statetype.climb) {
                
                    //Set the sprite
                    sprite_index = player_climb();
                    
                    //If moving
                    if (speed &gt; 0)
                        image_speed = 0.15;
                    
                    //Otherwise, if not moving
                    else {
                    
                        image_speed = 0;
                        image_index = 0;
                    }
                }
            }
            
            //Otherwise, if the player is kicking something
            else if (kicking == true) {
            
                //Set the sprite
                sprite_index = player_kick();
                
                //Do not animate
                image_speed = 0;
                image_index = 0;
            }
        }
        
        //Otherwise, if the player is sliding down a slope
        else if (sliding == true) {
        
            //Set the sprite
            sprite_index = player_slide();
            
            //Do not animate
            image_speed = 0;
            image_index = 0;
        }
    }
    
    //Otherwise, if the player is holding something
    else if (holding == true) {
    
        //If Mario is turning around
        if (turnnow == true) {
        
            //Set the sprite
            sprite_index = player_spin();
            
            //Do not animate
            image_speed = 0;
            image_index = 1;
        }
    
        //Otherwise, if Mario is not turning around
        else {
        
            //If Mario is not moving
            if (state == statetype.idle) {
            
                //Set the sprite
                sprite_index = player_hold();
                
                //Do not animate
                image_speed = 0;
                
                //But set the appropiate frame
                if (keyboard_check(global.key_u))
                    image_index = 1;
                else
                    image_index = 0;
            }
            
            //Otherwise, if Mario is walking
            else if (state == statetype.walk) {
            
                //Set the sprite
                sprite_index = player_hold2();
                            
                //Animate
                image_speed = (0.065*(inice*4))+abs(hspeed)/7.5;                       
            }
            
            //Otherwise, if Mario is jumping
            else if (state == statetype.jump) {
            
                //If Mario is not swimming
                if (swimming == false) {
                
                    //If Mario is doing a spinjump
                    if (jumpstyle == true) {
                    
                        //Set the sprite
                        sprite_index = player_spin();
                        
                        //Animate
                        image_speed = 0.5;
                    }
                    
                    //Otherwise, if Mario is not doing a spinjump
                    else if (jumpstyle == false) {
                    
                        //Set the sprite
                        sprite_index = player_hold2();
                        
                        //Do not animate
                        image_speed = 0;
                        image_index = 0;
                    }
                }
                
                //Otherwise, if the player is swimming
                else if (swimming == true) {
                
                    //Set the sprite
                    sprite_index = player_swim2();
                    
                    //If moving down
                    if (vspeed &gt; 0)
                        image_speed = 0.15;
                    
                    //Otherwise
                    else {
                    
                        //Do not animate
                        image_speed = 0;
                        image_index = 0;
                    }
                }
            }
        }
    }
    
    //Set up the mask
    if (global.powerup &gt; cs_pow_small)
        mask_index = spr_mask_player_big;
    else
        mask_index = spr_mask_player;
}

/*Force end skid sound
if (sprite_index != player_skid()) 
&amp;&amp; (audio_is_playing(snd_skid))
    audio_stop_sound(snd_skid);*/

//Force end firing animation if walking
if (firing &gt; 0)
&amp;&amp; (state == statetype.walk)
    firing = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset animations

//If the player is moving
if (speed &gt; 0) {
    
    //If the player is climbing
    if (sprite_index == player_climb())
        image_index = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
