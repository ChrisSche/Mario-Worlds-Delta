<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_eventmarker</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera

//Orientation
orientation = 1;

//Camera Y
camera_y = 0;
camera_timer = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage position of the camera

//If the player object exists, follow it
if (instance_exists(obj_playerparent)) {

    //If the player is moving to the left and the camera is panning to the right, make the camera pan to the left.
    if (obj_playerparent.hspeed &lt; 0) &amp;&amp; (obj_playerparent.x &lt; x-56)
        orientation = -1;
        
    //Otherwise, if the player is moving to the right and the camera is panning to the left, make the camera pan to the right.
    else if (obj_playerparent.hspeed &gt; 0) &amp;&amp; (obj_playerparent.x &gt; x+56)
        orientation = 1;
        
    //If the camera is at the right
    if (orientation == 1)
    &amp;&amp; (obj_playerparent.x &gt; x-32) {
    
        //Scroll at a certain speed until the camera catches up
        if (obj_playerparent.x &gt; x-28)
            x += 4+obj_playerparent.hspeed;
        else
            x = obj_playerparent.x+32;
    }
    
    //Otherwise, if the camera is at the left
    else if (orientation == -1) 
    &amp;&amp; (obj_playerparent.x &lt; x+32) {
    
        //Scroll at a certain speed until the camera catches up
        if (obj_playerparent.x &lt; x+28)
            x -= 4-obj_playerparent.hspeed;
        else
            x = obj_playerparent.x-32;
    }
    
    //Set camera vertical position
    event_user(0);
    
    //Stay relative to player's y position
    y = obj_playerparent.y+camera_y;
    
    //Prevent the player from going outside the view
    if (obj_playerparent.x &lt; view_xview[0]+8) {
    
        obj_playerparent.x = view_xview[0]+8;
        if (obj_playerparent.hspeed &lt; 0)
            obj_playerparent.hspeed = 0;
    }
    else if (obj_playerparent.x &gt; view_xview[0] + view_wview[0]-8) {
    
        obj_playerparent.x = view_xview[0] + view_wview[0]-8;
        if (obj_playerparent.hspeed &gt; 0)
            obj_playerparent.hspeed = 0;    
    }
}

//Otherwise, cancel camera y scroll
else {

    //Reset timer
    camera_timer = 60;
    
    //Return camera position
    if (camera_y &gt; 0)
        camera_y -= 4;
    else if (camera_y &lt; 0)
        camera_y += 4;
}

//Round position
x = round(x);
y = round(y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Adjust camera y position

//Make sure the player is not doing anything
if (obj_playerparent.state == statetype.idle) {
    
    //If the 'Up' key is pressed
    if (keyboard_check(global.key_u)) {
    
        camera_timer--;
        if (camera_timer &lt; 0) {
        
            camera_y -= 4;
            if (camera_y &lt; -64)
                camera_y = -64;
        }
    }
    
    //Otherwise, if the 'Down' key is pressed
    else if (keyboard_check(global.key_d)) {
    
        camera_timer--;
        if (camera_timer &lt; 0) {
        
            camera_y += 4;
            if (camera_y &gt; 64)
                camera_y = 64;
        }
    }
    
    //Otherwise, reset it
    else {
    
        //Reset timer
        camera_timer = 30;
        
        //Return camera position
        if (camera_y &gt; 0)
            camera_y -= 4;
        else if (camera_y &lt; 0)
            camera_y += 4;            
    }
}
else {

    //Reset timer
    camera_timer = 30;
    
    //Return camera position
    if (camera_y &gt; 0)
        camera_y -= 4;
    else if (camera_y &lt; 0)
        camera_y += 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
